{"version":3,"sources":["./src/app/insurance/insurance.component.ts","./src/app/shopping-list/shopping-list.component.html","buffer (ignored)","webpack:///buffer (ignored)?6f52","crypto (ignored)","./src/app/recipes/recipe-list/recipe-item/recipe-item.component.html","./src/app/shared/dropdown.directive.ts","webpack:///util (ignored)?5d15","./src/app/recipes/recipe-list/recipe-list.component.css","webpack:///util (ignored)?3a5b","util (ignored)","webpack:///util (ignored)?4d2a","./src/app/web3.js","./src/app/shared/ingredient.model.ts","./src/app/home/home.component.ts","./src/app/app.component.css","./src/app/blockchain.service.ts","./src/app/recipes/recipes.component.html","./src/environments/environment.ts","./src/app/home/home.component.html","./src/app/insurance/insurance.component.css","./src/app/recipes/recipe-start/recipe-start.component.ts","./src/app/health-care/health-care.component.css","./src/app/recipes/recipe-list/recipe-list.component.html","./src/app/home/home.component.css","./src/app/recipes/recipe-list/recipe-item/recipe-item.component.css","./src/app/app.component.ts","./src/app/insurance/insurance.component.html","./src/app/recipes/recipe-list/recipe-item/recipe-item.component.ts","./src/app/shopping-list/shopping-edit/shopping-edit.component.ts","./src/app/app.component.html","./src/app/report.js","./src/app/policy.js","./src/app/shopping-list/shopping-edit/shopping-edit.component.html","./src/app/shopping-list/shopping-edit/shopping-edit.component.css","./src/app/app.module.ts","./src/app/recipes/recipe-edit/recipe-edit.component.html","./src/app/recipes/recipe.service.ts","./src/app/recipes/recipe-edit/recipe-edit.component.css","./src/$_lazy_route_resource lazy namespace object","./src/app/recipes/recipe-start/recipe-start.component.css","./src/app/recipes/recipe.model.ts","./src/app/header/header.component.ts","./src/app/recipes/recipe-start/recipe-start.component.html","./src/app/recipes/recipe-detail/recipe-detail.component.css","./src/app/login/login.component.html","./src/app/recipes/recipes.component.ts","./src/app/header/header.component.html","./src/app/recipes/recipe-detail/recipe-detail.component.html","./src/app/health-care/health-care.component.ts","./src/app/login/login.component.css","./src/app/shopping-list/shopping-list.service.ts","./src/app/recipes/recipe-list/recipe-list.component.ts","./src/app/health-care/health-care.component.html","./src/app/shopping-list/shopping-list.component.css","./src/app/shopping-list/shopping-list.component.ts","./src/app/app-routing.module.ts","./src/app/recipes/recipe-detail/recipe-detail.component.ts","./src/app/login/login.component.ts","./src/app/recipes/recipe-edit/recipe-edit.component.ts","./src/main.ts","./src/app/recipes/recipes.component.css"],"names":["window","ethereum","request","method","web3","Web3","address","abi","eth","Contract"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAkD;AACvB;AACI;AACA;AAC2B;;IAoBxD,4BAAoB,iBAAoC;QAApC,sBAAiB,GAAjB,iBAAiB,CAAmB;QAVjD,kBAAa,GAAG,EAAE,CAAC;QAKnB,cAAS,GAAG,KAAK,CAAC;QAClB,cAAS,GAAG,KAAK,CAAC;IAImC,CAAC;IAEvD,qCAAQ,GAAd;;;;;;wBACE,IAAI,CAAC,iBAAiB,CAAC,aAAa,CAAC,SAAS,CAAC,cAAI,IAAI,cAAO,CAAC,GAAG,CAAC,IAAI,CAAC,EAAjB,CAAiB,CAAC,CAAC;wBAE1E,SAAI;wBAAW,qBAAM,6CAAI,CAAC,GAAG,CAAC,UAAU,CAAC,+CAAM,CAAC,OAAO,CAAC,OAAO,CAAC;;wBAAhE,GAAK,OAAO,GAAG,SAAiD,CAAC;wBACjE,IAAI,CAAC,OAAO,GAAG,6CAAI,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC;wBACzD,OAAO,CAAC,GAAG,CAAC,yCAAyC,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC;;;;;KAEvE;IAGK,+CAAkB,GAAxB;;;;;;wBAEE,SAAI;wBAAW,qBAAM,+CAAM,CAAC,OAAO,CAAC,OAAO,EAAE,CAAC,IAAI,EAAE;;wBAApD,GAAK,OAAO,GAAG,SAAqC,CAAC;wBACrD,OAAO,CAAC,GAAG,CAAC,8BAA8B,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC;wBAE3D,SAAI;wBAAiB,qBAAM,+CAAM,CAAC,OAAO,CAAC,gBAAgB,EAAE,CAAC,IAAI,EAAE;;wBAAnE,GAAK,aAAa,GAAG,SAA8C,CAAC;wBACpE,OAAO,CAAC,GAAG,CAAC,gCAAgC,GAAG,IAAI,CAAC,aAAa,CAAC,CAAC;wBAGnE,SAAI;wBAAgB,qBAAM,+CAAM,CAAC,OAAO,CAAC,UAAU,EAAE,CAAC,IAAI,EAAE;;wBAA5D,GAAK,YAAY,GAAG,SAAwC,CAAC;wBAC7D,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,iBAAiB,CAAC,WAAW,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC;wBAEnE,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;wBAC/B,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC;wBACtC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC;wBAI5C,SAAI;wBAAW,qBAAM,6CAAI,CAAC,GAAG,CAAC,UAAU,CAAC,+CAAM,CAAC,OAAO,CAAC,OAAO,CAAC;;wBAAhE,GAAK,OAAO,GAAG,SAAiD,CAAC;wBACjE,IAAI,CAAC,OAAO,GAAG,6CAAI,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC;wBACzD,OAAO,CAAC,GAAG,CAAC,yCAAyC,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC;;;;;KAGrE;IAGK,oCAAO,GAAb,UAAc,IAAY;;;;;;;wBAGxB,IAAI,CAAC,SAAS,GAAG,IAAI;wBACrB,qBAAM,+CAAM,CAAC,OAAO,CAAC,KAAK,EAAE,CAAC,IAAI,CAAC;gCAChC,IAAI,EAAE,IAAI,CAAC,OAAO;gCAClB,KAAK,EAAE,6CAAI,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE,OAAO,CAAC;6BACpD,CAAC;;wBAHF,SAGE,CAAC;wBAGH,SAAI;wBAAW,qBAAM,6CAAI,CAAC,GAAG,CAAC,UAAU,CAAC,+CAAM,CAAC,OAAO,CAAC,OAAO,CAAC;;wBAAhE,GAAK,OAAO,GAAG,SAAiD,CAAC;wBACjE,IAAI,CAAC,OAAO,GAAG,6CAAI,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC;wBAGzD,OAAO,CAAC,GAAG,CAAC,mDAAmD,GAAG,6CAAI,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE,OAAO,CAAC,CAAC,CAAC;wBAGhH,IAAI,CAAC,SAAS,GAAG,KAAK;wBACtB,IAAI,CAAC,SAAS,GAAG,IAAI;wBAIrB,UAAU,CAAC;4BACT,KAAI,CAAC,SAAS,GAAG,KAAK;wBACxB,CAAC,EAAE,KAAK,CAAC,CAAC;;;;;KAKX;IAEK,6CAAgB,GAAtB;;;;;;wBACE,IAAI,CAAC,SAAS,GAAG,IAAI;wBAErB,SAAI;wBAAe,SAAI;wBAAgB,qBAAM,+CAAM,CAAC,OAAO,CAAC,eAAe,EAAE,CAAC,IAAI,EAAE;;wBAApF,GAAK,WAAW,GAAG,GAAK,WAAW,GAAI,SAA6C,CAAC;6BAEjF,KAAI,CAAC,YAAY,CAAC,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC,CAAC,YAAY,IAAI,cAAc,GAAtE,wBAAsE;wBACxE,qBAAM,+CAAM,CAAC,OAAO,CAAC,gBAAgB,EAAE,CAAC,IAAI,CAAC,EAAC,IAAI,EAAG,IAAI,CAAC,OAAO,EAAC,CAAC;;wBAAnE,SAAmE,CAAC;wBACpE,OAAO,CAAC,GAAG,CAAC,wBAAwB,CAAC,CAAC;;;wBAItC,OAAO,CAAC,GAAG,CAAC,4BAA4B,CAAC;;;wBAG3C,IAAI,CAAC,SAAS,GAAG,KAAK;;;;;KACvB;;gBAxGI,qEAAiB;;IAQb,kBAAkB;QAL9B,+DAAS,CAAC;YACT,QAAQ,EAAE,eAAe;YACzB,sFAAyC;;SAE1C,CAAC;yCAauC,qEAAiB;OAZ7C,kBAAkB,CAqG5B;IAAD,yBAAC;CAAA;AArG4B;;;;;;;;;;;;;;;;;;;;;;;;;ACZ/B;AAAe,uUAAwQ,wEAAwE,mBAAmB,IAAI,qBAAqB,6CAA6C,E;;;;;;;;;;;ACAxb,e;;;;;;;;;;;ACAA,e;;;;;;;;;;;ACAA,e;;;;;;;;;;;;ACAA;AAAe,kGAAmC,mMAAmM,eAAe,mDAAmD,sBAAsB,6HAA6H,eAAe,2EAA2E,6BAA6B,E;;;;;;;;;;;;;;;;;;;;;ACA5f;;;QAOtC,WAAM,GAAG,KAAK,CAAC;IAK9C,CAAC;IAH0B,sCAAU,GAAjC;QACI,IAAI,CAAC,MAAM,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC;IAC/B,CAAC;;yBAJA,yDAAW,SAAC,YAAY;6BAExB,0DAAY,SAAC,OAAO;;IAHZ,iBAAiB;QAJ7B,+DAAS,CAAC;YACP,QAAQ,EAAE,eAAe;SAC5B,CAAC;OAEW,iBAAiB,CAM7B;IAAD,wBAAC;CAAA;AAN6B;;;;;;;;;;;;ACN9B,e;;;;;;;;;;;;ACAA;AAAe,6GAA8C,+HAA+H,E;;;;;;;;;;;ACA5L,e;;;;;;;;;;;ACAA,e;;;;;;;;;;;ACAA,e;;;;;;;;;;;;ACAA;AAAA;AAAA;AAAA;AAEAA,MAAM,CAACC,QAAP,CAAgBC,OAAhB,CAAwB;AAAEC,QAAM,EAAE;AAAV,CAAxB;AAEA,IAAMC,IAAI,GAAG,IAAIC,2CAAJ,CAASL,MAAM,CAACC,QAAhB,CAAb;AAEeG,mEAAf,E;;;;;;;;;;;;ACNA;AAAA;AAAA;IACE,oBAAmB,IAAY,EAAS,MAAc;QAAnC,SAAI,GAAJ,IAAI,CAAQ;QAAS,WAAM,GAAN,MAAM,CAAQ;IAAG,CAAC;IAC5D,iBAAC;AAAD,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACFuE;AAC/B;;IASvC,uBAAoB,MAAc;QAAd,WAAM,GAAN,MAAM,CAAQ;IAAI,CAAC;IAEvC,gCAAQ,GAAR;IACA,CAAC;IAMM,qCAAa,GADpB,UACqB,KAAY;QAC/B,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC;IACvC,CAAC;;gBApBM,sDAAM;;;gCAiBZ,0DAAY,SAAC,gBAAgB,EAAE,CAAC,QAAQ,CAAC;;IAV/B,aAAa;QALzB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;YACpB,iFAAoC;;SAErC,CAAC;yCAG4B,sDAAM;OAFvB,aAAa,CAezB;IAAD,oBAAC;CAAA;AAfyB;;;;;;;;;;;;;ACR1B;AAAe,6GAA8C,mHAAmH,E;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACArI;AACE;AACnB;AACI;AACA;AAEiC;;IAyB7D;QAAA,iBAAiB;QAnBT,YAAO,GAAG,IAAI,oDAAe,CAAC,eAAe,CAAC,CAAC;QACvD,kBAAa,GAAG,IAAI,CAAC,OAAO,CAAC,YAAY,EAAE,CAAC;QAWrC,iBAAY,GAAG,IAAI,CAAC,OAAO,CAAC,YAAY,EAAE,CAAC;QA0ElD,aAAQ,GAAG,UAAO,IAAY;;;;;wBAC5B,KAAK,CAAC,cAAc,EAAE,CAAC;wBACvB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;wBAGlB,0BAA0B;wBAE1B,iDAAiD;wBACjD,0BAA0B;wBAI1B,uCAAuC;wBAEvC,+BAA+B;wBAI/B,kBAAkB;wBAGlB,IAAI,CAAC,UAAU,GAAI,OAAO,CAAC,GAAG,CAC5B,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;6BAC9B,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,WAAW,CAAC;6BACzB,GAAG,CAAC,UAAC,OAAO,EAAE,KAAK;4BAClB,OAAO,+CAAM,CAAC,OAAO,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,IAAI,EAAE,CAAC;wBAC/C,CAAC,CAAC,CACL,CAAC;wBAEF,SAAI;wBAAgB,qBAAM,+CAAM,CAAC,OAAO,CAAC,eAAe,EAAE,CAAC,IAAI,EAAE;;wBAAjE,GAAK,WAAW,GAAI,SAA6C,CAAC;wBAElE,0DAA0D;wBAC1D,uDAAuD;wBACvD,sDAAsD;wBACtD,4DAA4D;wBAC5D,IAAI;wBAIJ,SAAI;wBAAW,qBAAM,+CAAM,CAAC,OAAO,CAAC,YAAY,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,EAAE,IAAI,EAAE,IAAI,CAAC,OAAO,EAAE,CAAC;;wBAR5G,0DAA0D;wBAC1D,uDAAuD;wBACvD,sDAAsD;wBACtD,4DAA4D;wBAC5D,IAAI;wBAIJ,GAAK,OAAO,GAAG,SAA6F,CAAC;wBAC7G,OAAO,CAAC,GAAG,CAAC,wCAAwC,GAAG,IAAI,CAAC,OAAO,CAAC;wBAKpE,SAAI;wBAAgB,qBAAM,+CAAM,CAAC,OAAO,CAAC,UAAU,EAAE,CAAC,IAAI,EAAE;;wBAA5D,GAAK,YAAY,GAAG,SAAwC,CAAC;wBAC7D,OAAO,CAAC,GAAG,CAAC,uDAAuD,GAAG,IAAI,CAAC,WAAW,CAAC,CAAC;wBACxF,OAAO,CAAC,GAAG,CAAC,kBAAkB,GAAG,IAAI,CAAC,YAAY,CAAC,CAAC;wBACpD,OAAO,CAAC,GAAG,CAAC,uBAAuB,GAAG,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;;;;aAQlE;IA3He,CAAC;IAWjB,uCAAW,GAAX,UAAY,YAAY;QACtB,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,YAAY,CAAC;IACjC,CAAC;IAWD,oCAAQ,GAAR;QAEE,OAAO,CAAC,GAAG,CAAC,iBAAiB,GAAG,6CAAI,CAAC,OAAO,CAAC,CAAC;QAE9C,6CAAI,CAAC,GAAG,CAAC,WAAW,EAAE,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;IAE3C,CAAC;IAEK,8CAAkB,GAAxB;;;;;;wBACE,SAAI;wBAAW,qBAAM,+CAAM,CAAC,OAAO,CAAC,OAAO,EAAE,CAAC,IAAI,EAAE;;wBAApD,GAAK,OAAO,GAAG,SAAqC,CAAC;wBACrD,OAAO,CAAC,GAAG,CAAC,8BAA8B,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC;wBAE3D,SAAI;wBAAW,qBAAM,+CAAM,CAAC,OAAO,CAAC,UAAU,EAAE,CAAC,IAAI,EAAE;;wBAAvD,GAAK,OAAO,GAAG,SAAwC,CAAC;wBACxD,OAAO,CAAC,GAAG,CAAC,0BAA0B,GAAG,IAAI,CAAC,OAAO,CAAC;wBAEtD,SAAI;wBAAW,qBAAM,6CAAI,CAAC,GAAG,CAAC,UAAU,CAAC,+CAAM,CAAC,OAAO,CAAC,OAAO,CAAC;;wBAAhE,GAAK,OAAO,GAAG,SAAiD,CAAC;wBACjE,IAAI,CAAC,OAAO,GAAG,6CAAI,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,EAAE,OAAO,CAAC;wBACxD,OAAO,CAAC,GAAG,CAAC,0BAA0B,GAAG,IAAI,CAAC,OAAO,CAAC;wBAEtD,OAAO,CAAC,GAAG,CAAC,iEAAiE,GAAG,IAAI,CAAC,UAAU,CAAC,CAAC;wBAGjG,SAAI;wBAAgB,qBAAM,+CAAM,CAAC,OAAO,CAAC,eAAe,EAAE,CAAC,IAAI,EAAE;;wBAAjE,GAAK,WAAW,GAAI,SAA6C,CAAC;wBAClE,OAAO,CAAC,GAAG,CAAC,uDAAuD,GAAG,IAAI,CAAC,WAAW,CAAC,CAAC;wBAGxF,SAAI;wBAAgB,qBAAM,+CAAM,CAAC,OAAO,CAAC,UAAU,EAAE,CAAC,IAAI,EAAE;;wBAA5D,GAAK,YAAY,GAAG,SAAwC,CAAC;wBAC7D,OAAO,CAAC,GAAG,CAAC,kBAAkB,GAAG,IAAI,CAAC,YAAY,CAAC,CAAC;wBACpD,OAAO,CAAC,GAAG,CAAC,iCAAiC,GAAG,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,CAAC;wBACtE,OAAO,CAAC,GAAG,CAAC,uBAAuB,GAAG,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;wBAGjE,OAAO,CAAC,GAAG,CAAC,wCAAwC,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC;;;;;KAKtE;IA0EK,2CAAe,GAArB;;;;;;wBACE,SAAI;wBAAgB,qBAAM,+CAAM,CAAC,OAAO,CAAC,UAAU,EAAE,CAAC,IAAI,EAAE;;wBAA5D,GAAK,YAAY,GAAG,SAAwC,CAAC;;;;;KAC9D;IAIK,4CAAgB,GAAtB,UAAuB,aAAa;;;;;6BAE7B,KAAI,CAAC,YAAY,CAAC,aAAa,CAAC,CAAC,aAAa,IAAI,cAAc,GAAhE,wBAAgE;wBACjE,qBAAM,+CAAM,CAAC,OAAO,CAAC,gBAAgB,EAAE,CAAC,IAAI,CAAC,EAAC,IAAI,EAAG,IAAI,CAAC,OAAO,EAAC,CAAC;;wBAAnE,SAAmE,CAAC;wBACpE,OAAO,CAAC,GAAG,CAAC,wBAAwB,CAAC,CAAC;;;wBAItC,OAAO,CAAC,GAAG,CAAC,4BAA4B,CAAC;;;;;;KAG9C;IAKM,8CAAkB,GAAzB;QACE,IAAI,QAAa,CAAC;QAEpB,OAAO,iDAAI,CAAC,gEAAsB,EAAE,CAAC,CAAC,IAAI,EAAE;IAG5C,CAAC;;IAxLU,iBAAiB;QAD7B,gEAAU,EAAE;;OACA,iBAAiB,CA6L7B;IAAD,wBAAC;CAAA;AA7L6B;;;;;;;;;;;;;ACV9B;AAAe,wPAAyL,E;;;;;;;;;;;;ACAxM;AAAA;AAAA,gFAAgF;AAChF,2EAA2E;AAC3E,gEAAgE;AAEzD,IAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;GAKG;AACH,mEAAmE;;;;;;;;;;;;;ACdnE;AAAe,iGAAkC,E;;;;;;;;;;;;ACAjD;AAAe,6GAA8C,2HAA2H,E;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAtI;;IAShD;IAAgB,CAAC;IAEjB,uCAAQ,GAAR;IACA,CAAC;;IALU,oBAAoB;QALhC,+DAAS,CAAC;YACT,QAAQ,EAAE,kBAAkB;YAC5B,yFAA4C;;SAE7C,CAAC;;OACW,oBAAoB,CAOhC;IAAD,2BAAC;CAAA;AAPgC;;;;;;;;;;;;;ACPjC;AAAe,6GAA8C,+HAA+H,E;;;;;;;;;;;;ACA5L;AAAe,6UAA8Q,wGAAwG,E;;;;;;;;;;;;ACArY;AAAe,4EAAa,0CAA0C,oCAAoC,+BAA+B,gCAAgC,gBAAgB,iBAAiB,sEAAsE,yBAAyB,KAAK,+CAA+C,2tBAA2tB,E;;;;;;;;;;;;ACAxjC;AAAe,6GAA8C,+HAA+H,E;;;;;;;;;;;;;;;;;;;;;;;;;ACAlJ;;;IAc1C,CAAC;IAJC,+BAAQ,GAAR,cAAY,CAAC;IAHF,YAAY;QALxB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;YACpB,gFAAmC;;SAEpC,CAAC;OACW,YAAY,CAOxB;IAAD,mBAAC;CAAA;AAPwB;;;;;;;;;;;;;ACPzB;AAAe,2IAA4E,WAAW,0EAA0E,kBAAkB,cAAc,kBAAkB,wVAAwV,SAAS,6qCAA6qC,E;;;;;;;;;;;;;;;;;;;;;;;;;;ACAvrD;AACb;;;IAe5C,CAAC;IAHC,sCAAQ,GAAR;IACA,CAAC;;yBALA,mDAAK;wBACL,mDAAK;;IAFK,mBAAmB;QAL/B,+DAAS,CAAC;YACT,QAAQ,EAAE,iBAAiB;YAC3B,wFAA2C;;SAE5C,CAAC;OACW,mBAAmB,CAQ/B;IAAD,0BAAC;CAAA;AAR+B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACRwC;AAChC;AAEqB;AACE;;IAc7D,+BAAoB,SAA8B;QAA9B,cAAS,GAAT,SAAS,CAAqB;QAJlD,aAAQ,GAAG,KAAK,CAAC;IAIqC,CAAC;IAEvD,wCAAQ,GAAR;QAAA,iBAaC;QAZC,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,SAAS,CAAC,cAAc;aAChD,SAAS,CACR,UAAC,KAAa;YACZ,KAAI,CAAC,eAAe,GAAG,KAAK,CAAC;YAC7B,KAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;YACrB,KAAI,CAAC,UAAU,GAAG,KAAI,CAAC,SAAS,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;YACtD,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC;gBACnB,IAAI,EAAE,KAAI,CAAC,UAAU,CAAC,IAAI;gBAC1B,MAAM,EAAE,KAAI,CAAC,UAAU,CAAC,MAAM;aAC/B,CAAC;QACJ,CAAC,CACF,CAAC;IACJ,CAAC;IAED,wCAAQ,GAAR,UAAS,IAAY;QACnB,IAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;QACzB,IAAM,aAAa,GAAG,IAAI,0EAAU,CAAC,KAAK,CAAC,IAAI,EAAE,KAAK,CAAC,MAAM,CAAC,CAAC;QAC/D,IAAI,IAAI,CAAC,QAAQ,EAAE;YACjB,IAAI,CAAC,SAAS,CAAC,gBAAgB,CAAC,IAAI,CAAC,eAAe,EAAE,aAAa,CAAC;SACrE;aAAM;YACL,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC,aAAa,CAAC;SAC5C;QACD,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;QACtB,IAAI,CAAC,KAAK,EAAE,CAAC;IACf,CAAC;IAED,uCAAO,GAAP;QACE,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC;QACpB,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;IACxB,CAAC;IAED,wCAAQ,GAAR;QACE,IAAI,CAAC,SAAS,CAAC,gBAAgB,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;QACtD,IAAI,CAAC,OAAO,EAAE,CAAC;IACjB,CAAC;IAED,2CAAW,GAAX;QACE,IAAI,CAAC,YAAY,CAAC,WAAW,EAAE,CAAC;IAClC,CAAC;;gBAvDM,0EAAmB;;;yBAQzB,uDAAS,SAAC,GAAG;;IADH,qBAAqB;QALjC,+DAAS,CAAC;YACT,QAAQ,EAAE,mBAAmB;YAC7B,0FAA6C;;SAE9C,CAAC;yCAQ+B,0EAAmB;OAPvC,qBAAqB,CAkDjC;IAAD,4BAAC;CAAA;AAlDiC;;;;;;;;;;;;;ACXlC;AAAe,kPAAmL,E;;;;;;;;;;;;ACAlM;AAAA;AAAA;AAEA,IAAME,OAAO,GAAG,4CAAhB;AAEA,IAAMC,GAAG,GAAG,CAAC;AAAC,cAAW,IAAZ;AAAiB,YAAS,EAA1B;AAA6B,UAAO,iBAApC;AAAsD,aAAU,CAAC;AAAC,YAAO,EAAR;AAAW,YAAO;AAAlB,GAAD,CAAhE;AAA+F,aAAU,KAAzG;AAA+G,qBAAkB,MAAjI;AAAwI,UAAO;AAA/I,CAAD,EAA4J;AAAC,cAAW,IAAZ;AAAiB,YAAS,EAA1B;AAA6B,UAAO,SAApC;AAA8C,aAAU,CAAC;AAAC,YAAO,EAAR;AAAW,YAAO;AAAlB,GAAD,CAAxD;AAAuF,aAAU,KAAjG;AAAuG,qBAAkB,MAAzH;AAAgI,UAAO;AAAvI,CAA5J,EAA+S;AAAC,cAAW,KAAZ;AAAkB,YAAS,EAA3B;AAA8B,UAAO,YAArC;AAAkD,aAAU,EAA5D;AAA+D,aAAU,KAAzE;AAA+E,qBAAkB,YAAjG;AAA8G,UAAO;AAArH,CAA/S,EAAgb;AAAC,cAAW,IAAZ;AAAiB,YAAS,EAA1B;AAA6B,UAAO,YAApC;AAAiD,aAAU,CAAC;AAAC,YAAO,EAAR;AAAW,YAAO;AAAlB,GAAD,CAA3D;AAA4F,aAAU,KAAtG;AAA4G,qBAAkB,MAA9H;AAAqI,UAAO;AAA5I,CAAhb,EAAwkB;AAAC,cAAW,IAAZ;AAAiB,YAAS,EAA1B;AAA6B,UAAO,YAApC;AAAiD,aAAU,CAAC;AAAC,kBAAa,CAAC;AAAC,cAAO,WAAR;AAAoB,cAAO;AAA3B,KAAD,EAAuC;AAAC,cAAO,MAAR;AAAe,cAAO;AAAtB,KAAvC,EAAuE;AAAC,cAAO,aAAR;AAAsB,cAAO;AAA7B,KAAvE,EAA8G;AAAC,cAAO,aAAR;AAAsB,cAAO;AAA7B,KAA9G,EAAqJ;AAAC,cAAO,cAAR;AAAuB,cAAO;AAA9B,KAArJ,EAA6L;AAAC,cAAO,MAAR;AAAe,cAAO;AAAtB,KAA7L,EAA6N;AAAC,cAAO,YAAR;AAAqB,cAAO;AAA5B,KAA7N,EAAmQ;AAAC,cAAO,SAAR;AAAkB,cAAO;AAAzB,KAAnQ,EAAsS;AAAC,cAAO,UAAR;AAAmB,cACv9B;AADo8B,KAAtS,EACppB;AAAC,cAAO,qBAAR;AAA8B,cAAO;AAArC,KADopB,EACrmB;AAAC,cAAO,cAAR;AAAuB,cAAO;AAA9B,KADqmB,CAAd;AAC9iB,YAAO,EADuiB;AACpiB,YAAO;AAD6hB,GAAD,CAA3D;AACrd,aAAU,KAD2c;AACrc,qBAAkB,MADmb;AAC5a,UAAO;AADqa,CAAxkB,EAC+K;AAAC,cAAW,IAAZ;AAAiB,YAAS,CAAC;AAAC,YAAO,EAAR;AAAW,YAAO;AAAlB,GAAD,CAA1B;AAAyD,UAAO,SAAhE;AAA0E,aAAU,CAAC;AAAC,YAAO,WAAR;AAAoB,YAAO;AAA3B,GAAD,EAAuC;AAAC,YAAO,MAAR;AAAe,YAAO;AAAtB,GAAvC,EAAuE;AAAC,YAAO,aAAR;AAAsB,YAAO;AAA7B,GAAvE,EAA8G;AAAC,YAAO,aAAR;AAAsB,YAAO;AAA7B,GAA9G,EAAqJ;AAAC,YAAO,cAAR;AAAuB,YAAO;AAA9B,GAArJ,EAA6L;AAAC,YAAO,MAAR;AAAe,YAAO;AAAtB,GAA7L,EAA6N;AAAC,YAAO,YAAR;AAAqB,YAAO;AAA5B,GAA7N,EAAmQ;AAAC,YAAO,SAAR;AAAkB,YAAO;AAAzB,GAAnQ,EAAsS;AAAC,YAAO,UAAR;AAAmB,YAAO;AAA1B,GAAtS,EAA0U;AAAC,YAAO,qBAAR;AAA8B,YAAO;AAArC,GAA1U,EAAyX;AAAC,YAAO,cAAR;AAAuB,YAAO;AAA9B,GAAzX,CAApF;AAAsf,aAAU,KAAhgB;AAAsgB,qBAAkB,MAAxhB;AAA+hB,UAAO;AAAtiB,CAD/K,EACiuB;AAAC,cAAW,KAAZ;AAAkB,YAAS,CAAC;AAAC,YAAO,WAAR;AAAoB,YAAO;AAA3B,GAAD,EACxwB;AAAC,YAAO,MAAR;AAAe,YAAO;AAAtB,GADwwB,EACxuB;AAAC,YAAO,aAAR;AAAsB,YAAO;AAA7B,GADwuB,EACjsB;AAAC,YAAO,aAAR;AAAsB,YAAO;AAA7B,GADisB,EAC1pB;AAAC,YAAO,cAAR;AAAuB,YAAO;AAA9B,GAD0pB,EAClnB;AAAC,YAAO,MAAR;AAAe,YAAO;AAAtB,GADknB,EACllB;AAAC,YAAO,YAAR;AAAqB,YAAO;AAA5B,GADklB,EAC5iB;AAAC,YAAO,SAAR;AAAkB,YAAO;AAAzB,GAD4iB,EACzgB;AAAC,YAAO,UAAR;AAAmB,YAAO;AAA1B,GADygB,EACre;AAAC,YAAO,qBAAR;AAA8B,YAAO;AAArC,GADqe,EACtb;AAAC,YAAO,cAAR;AAAuB,YAAO;AAA9B,GADsb,CAA3B;AAClX,UAAO,cAD2W;AAC5V,aAAU,EADkV;AAC/U,aAAU,KADqU;AAC/T,qBAAkB,YAD6S;AAChS,UAAO;AADyR,CADjuB,EAEod;AAAC,cAAW,KAAZ;AAAkB,YAAS,EAA3B;AAA8B,UAAO,OAArC;AAA6C,aAAU,EAAvD;AAA0D,aAAU,IAApE;AAAyE,qBAAkB,SAA3F;AAAqG,UAAO;AAA5G,CAFpd,EAE4kB;AAAC,cAAW,IAAZ;AAAiB,YAAS,CAAC;AAAC,YAAO,EAAR;AAAW,YAAO;AAAlB,GAAD,CAA1B;AAAyD,UAAO,SAAhE;AAA0E,aAAU,CAAC;AAAC,YAAO,EAAR;AAAW,YAAO;AAAlB,GAAD,CAApF;AAAmH,aAAU,KAA7H;AAAmI,qBAAkB,MAArJ;AAA4J,UAAO;AAAnK,CAF5kB,EAE2vB;AAAC,YAAS,EAAV;AAAa,aAAU,KAAvB;AAA6B,qBAAkB,YAA/C;AAA4D,UAAO;AAAnE,CAF3vB,CAAZ;AAIe,mEAAIH,6CAAI,CAACI,GAAL,CAASC,QAAb,CAAsBF,GAAtB,EAA2BD,OAA3B,CAAf,E;;;;;;;;;;;;ACRA;AAAA;AAAA;AAEA,IAAMA,OAAO,GAAG,4CAAhB;AAEA,IAAMC,GAAG,GAAG,CAAC;AAAC,cAAW,IAAZ;AAAiB,YAAS,EAA1B;AAA6B,UAAO,YAApC;AAAiD,aAAU,CAAC;AAAC,YAAO,EAAR;AAAW,YAAO;AAAlB,GAAD,CAA3D;AAA0F,aAAU,KAApG;AAA0G,qBAAkB,MAA5H;AAAmI,UAAO;AAA1I,CAAD,EAAuJ;AAAC,cAAW,IAAZ;AAAiB,YAAS,EAA1B;AAA6B,UAAO,cAApC;AAAmD,aAAU,CAAC;AAAC,YAAO,EAAR;AAAW,YAAO;AAAlB,GAAD,CAA7D;AAA4F,aAAU,KAAtG;AAA4G,qBAAkB,MAA9H;AAAqI,UAAO;AAA5I,CAAvJ,EAA+S;AAAC,cAAW,IAAZ;AAAiB,YAAS,EAA1B;AAA6B,UAAO,kBAApC;AAAuD,aAAU,CAAC;AAAC,YAAO,EAAR;AAAW,YAAO;AAAlB,GAAD,CAAjE;AAAkG,aAAU,KAA5G;AAAkH,qBAAkB,MAApI;AAA2I,UAAO;AAAlJ,CAA/S,EAA6c;AAAC,cAAW,KAAZ;AAAkB,YAAS,EAA3B;AAA8B,UAAO,OAArC;AAA6C,aAAU,EAAvD;AAA0D,aAAU,IAApE;AAAyE,qBAAkB,SAA3F;AAAqG,UAAO;AAA5G,CAA7c,EAAqkB;AAAC,cAAW,KAAZ;AAAkB,YAAS,EAA3B;AAA8B,UAAO,kBAArC;AAAwD,aAAU,EAAlE;AAAqE,aAAU,KAA/E;AAAqF,qBAAkB,YAAvG;AAAoH,UAAO;AAA3H,CAArkB,EAA4sB;AAAC,cAAW,IAAZ;AAAiB,YAAS,CAAC;AAAC,YAAO,EAAR;AAAW,YAAO;AAAlB,GAAD,CAA1B;AAAyD,UAAO,eAAhE;AAAgF,aAAU,CAAC;AAAC,YAAO,EAAR;AAAW,YAAO;AAAlB,GAAD,CAA1F;AAAyH,aAAU,KAAnI;AAAyI,qBAAkB,MAA3J;AAAkK,UAAO;AAAzK,CAA5sB,EAAi4B;AAAC,YAAS,EAAV;AAAa,aAAU,KAAvB;AAA6B,qBAAkB,YAA/C;AAA4D,UAAO;AAAnE,CAAj4B,CAAZ;AAEe,mEAAIH,6CAAI,CAACI,GAAL,CAASC,QAAb,CAAsBF,GAAtB,EAA2BD,OAA3B,CAAf,E;;;;;;;;;;;;ACNA;AAAe,gyBAAiuB,+BAA+B,iSAAiS,E;;;;;;;;;;;;ACAhjC;AAAe,6GAA8C,mIAAmI,E;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAtI;AACjB;AACyB;AAGnB;AACa;AACG;AACmB;AACM;AACM;AACd;AACc;AAC9B;AACY;AACnB;AACD;AAC6B;AACH;AACR;AACL;AACf;AACG;AACsB;;;IA8BtD,CAAC;IAAb,SAAS;QA5BrB,8DAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,2DAAY;gBACZ,wEAAe;gBACf,2EAAgB;gBAChB,8FAAmB;gBACnB,oGAAqB;gBACrB,0GAAmB;gBACnB,4FAAqB;gBACrB,2GAAqB;gBACrB,6EAAiB;gBACjB,kGAAoB;gBACpB,+FAAmB;gBACnB,uFAAmB;gBACnB,kFAAkB;gBAClB,mEAAa;gBACb,sEAAc;aACf;YACD,OAAO,EAAE;gBACP,uEAAa;gBACb,0DAAW;gBACX,qEAAgB;gBAChB,kEAAmB;gBACnB,6FAAuB;aACxB;YACD,SAAS,EAAE,CAAC,yFAAmB,EAAE,sEAAiB,CAAC;YACnD,SAAS,EAAE,CAAC,2DAAY,CAAC;SAC1B,CAAC;OACW,SAAS,CAAI;IAAD,gBAAC;CAAA;AAAJ;;;;;;;;;;;;;ACrDtB;AAAe,i4EAAk0E,8DAA8D,ynCAAynC,E;;;;;;;;;;;;;;;;;;;;;;;;;;;ACA79G;AACa;AACqB;AACrC;;IAwBlC,uBAAoB,SAA8B;QAA9B,cAAS,GAAT,SAAS,CAAqB;QAlB5C,YAAO,GAAa;YACxB,IAAI,oDAAM,CAAC,eAAe,EAC1B,uBAAuB,EACvB,sEAAsE,EACtE;gBACI,IAAI,mEAAU,CAAC,MAAM,EAAE,CAAC,CAAC;gBACzB,IAAI,mEAAU,CAAC,cAAc,EAAE,EAAE,CAAC;aACrC,CAAC;YACF,IAAI,oDAAM,CAAC,eAAe,EAC1B,uBAAuB,EACvB,sEAAsE,EACtE;gBACI,IAAI,mEAAU,CAAC,MAAM,EAAE,CAAC,CAAC;gBACzB,IAAI,mEAAU,CAAC,MAAM,EAAE,CAAC,CAAC;aAC5B,CAAC;SACH,CAAC;IAKF,CAAC;IAKD,kCAAU,GAAV;QACE,OAAO,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,CAAC;IAC9B,CAAC;IAED,iCAAS,GAAT,UAAU,KAAa;QACrB,OAAO,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;IAC7B,CAAC;IAED,oDAA4B,GAA5B,UAA6B,WAAyB;QACpD,IAAI,CAAC,SAAS,CAAC,cAAc,CAAC,WAAW,CAAC,CAAC;IAC7C,CAAC;;gBA1CE,wFAAmB;;IAKf,aAAa;QADzB,gEAAU,EAAE;yCAqBwB,wFAAmB;OApB3C,aAAa,CAsCzB;IAAD,oBAAC;CAAA;AAtCyB;;;;;;;;;;;;;ACP1B;AAAe,6GAA8C,+HAA+H,E;;;;;;;;;;;ACA5L;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,qC;;;;;;;;;;;;ACZA;AAAe,6GAA8C,+HAA+H,E;;;;;;;;;;;;ACE5L;AAAA;AAAA;IAME,gBAAY,IAAY,EAAE,IAAY,EAAE,SAAiB,EAAE,WAAyB;QAClF,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;QACxB,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;QAC3B,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC;IACjC,CAAC;IACH,aAAC;AAAD,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;ACdyC;;;IAS1C,CAAC;IAHY,eAAe;QAJ3B,+DAAS,CAAC;YACT,QAAQ,EAAE,YAAY;YACtB,mFAAsC;SACvC,CAAC;OACW,eAAe,CAG3B;IAAD,sBAAC;CAAA;AAH2B;;;;;;;;;;;;;ACN5B;AAAe,gGAAiC,E;;;;;;;;;;;;ACAhD;AAAe,6GAA8C,mIAAmI,E;;;;;;;;;;;;ACAhM;AAAe,0PAA2L,sLAAsL,E;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACA9U;AACD;;IAU/C;IAAgB,CAAC;IAEjB,mCAAQ,GAAR;IACA,CAAC;;IALU,gBAAgB;QAN5B,+DAAS,CAAC;YACT,QAAQ,EAAE,aAAa;YACvB,oFAAuC;YAEvC,SAAS,EAAE,CAAC,6DAAa,CAAC;;SAC3B,CAAC;;OACW,gBAAgB,CAO5B;IAAD,uBAAC;CAAA;AAP4B;;;;;;;;;;;;;ACT7B;AAAe,27BAA43B,0KAA0K,kEAAkE,wGAAwG,E;;;;;;;;;;;;ACA/tC;AAAe,8JAA+F,eAAe,yIAAyI,eAAe,qYAAqY,qEAAqE,2FAA2F,8HAA8H,sBAAsB,kNAAkN,mBAAmB,KAAK,qBAAqB,6CAA6C,E;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAxsC;AACvB;AACI;AACA;AAE2B;;IA8BxD,6BAAoB,iBAAoC;QAAxD,iBAA6D;QAAzC,sBAAiB,GAAjB,iBAAiB,CAAmB;QAZjD,kBAAa,GAAG,CAAC,eAAe,EAAE,QAAQ,EAAE,UAAU,EAAE,WAAW,EAAE,UAAU,CAAC,CAAC;QACjF,kBAAa,GAAG,CAAC,eAAe,EAAE,UAAU,EAAE,UAAU,EAAE,SAAS,EAAE,cAAc,CAAC,CAAC;QACrF,kBAAa,GAAG,EAAE,CAAC;QACnB,cAAS,GAAG,KAAK,CAAC;QAClB,cAAS,GAAG,KAAK,CAAC;QAClB,YAAO,GAAG,KAAK,CAAC;QA4DvB,aAAQ,GAAG,UAAO,IAAY;;;;;;wBAC5B,IAAI,CAAC,SAAS,GAAG,IAAI;wBAErB,OAAO,CAAC,GAAG,CAAC,0BAA0B,CAAC;wBACvC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;wBAKD,qBAAM,6CAAI,CAAC,GAAG,CAAC,WAAW,EAAE;;wBAAvC,QAAQ,GAAG,SAA4B;wBAC7C,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;wBAItB,uCAAuC;wBAEvC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC;wBAI5B,kBAAkB;wBAGlB,IAAI,CAAC,UAAU,GAAI,OAAO,CAAC,GAAG,CAC5B,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;6BAC9B,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,WAAW,CAAC;6BACzB,GAAG,CAAC,UAAC,OAAO,EAAE,KAAK;4BAClB,OAAO,+CAAM,CAAC,OAAO,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,IAAI,EAAE,CAAC;wBAC/C,CAAC,CAAC,CACL,CAAC;wBAIF,KAAS,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,YAAY,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;4BACjD,OAAO,CAAC,GAAG,CAAC,QAAQ,GAAG,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;4BAClD,OAAO,CAAC,GAAG,CAAC,WAAW,GAAG,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC;yBACzD;wBAGD,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;wBAC1B,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;wBAC7B,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC;wBACpC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC;wBACpC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,CAAC;wBACrC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;wBAC7B,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC;wBACnC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;wBAChC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;wBACjC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,oBAAoB,CAAC,CAAC;wBAC7C,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC,CAAC;wBAEtC,qBAAM,+CAAM,CAAC,OAAO,CAAC,YAAY,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,IAAI,CAAC,KAAK,CAAC,WAAW,EAAE,IAAI,CAAC,KAAK,CAAC,WAAW,EAAE,IAAI,CAAC,KAAK,CAAC,YAAY,EAAE,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,IAAI,CAAC,KAAK,CAAC,UAAU,EAAE,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE,IAAI,CAAC,KAAK,CAAC,QAAQ,EAAE,IAAI,CAAC,KAAK,CAAC,oBAAoB,EAAE,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC,CAAC,IAAI,CAAC,EAAE,IAAI,EAAE,IAAI,CAAC,OAAO,EAAE,CAAC;;wBAAlT,SAAkT,CAAC;wBAGnT,SAAI;wBAAgB,qBAAM,+CAAM,CAAC,OAAO,CAAC,eAAe,EAAE,CAAC,IAAI,EAAE;;wBAAjE,GAAK,WAAW,GAAI,SAA6C,CAAC;wBAClE,OAAO,CAAC,GAAG,CAAC,iBAAiB,GAAG,IAAI,CAAC,WAAW,CAAC;wBAEjD,SAAI;wBAAgB,qBAAM,+CAAM,CAAC,OAAO,CAAC,UAAU,EAAE,CAAC,IAAI,EAAE;;wBAA5D,GAAK,YAAY,GAAG,SAAwC,CAAC;wBAC7D,OAAO,CAAC,GAAG,CAAC,uDAAuD,GAAG,IAAI,CAAC,WAAW,CAAC,CAAC;wBACxF,OAAO,CAAC,GAAG,CAAC,kBAAkB,GAAG,IAAI,CAAC,YAAY,CAAC,CAAC;wBACpD,OAAO,CAAC,GAAG,CAAC,uBAAuB,GAAG,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC;wBAE5F,KAAS,KAAK,GAAG,CAAC,EAAE,KAAK,GAAG,IAAI,CAAC,YAAY,CAAC,MAAM,EAAE,KAAK,EAAE,EAAE;4BAC7D,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC,CAAC;yBACvC;6BAMG,KAAI,CAAC,YAAY,CAAC,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC,CAAC,YAAY,IAAI,cAAc,GAAtE,wBAAsE;wBACxE,qBAAM,+CAAM,CAAC,OAAO,CAAC,gBAAgB,EAAE,CAAC,IAAI,CAAC,EAAC,IAAI,EAAG,IAAI,CAAC,OAAO,EAAC,CAAC;;wBAAnE,SAAmE,CAAC;wBACpE,OAAO,CAAC,GAAG,CAAC,wBAAwB,CAAC,CAAC;wBACtC,SAAI;wBAAW,qBAAM,6CAAI,CAAC,GAAG,CAAC,UAAU,CAAC,+CAAM,CAAC,OAAO,CAAC,OAAO,CAAC;;wBAAhE,GAAK,OAAO,GAAG,SAAiD,CAAC;wBACjE,IAAI,CAAC,OAAO,GAAG,6CAAI,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC;wBACzD,OAAO,CAAC,GAAG,CAAC,yCAAyC,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC;wBAEtE,IAAI,CAAC,SAAS,GAAG,IAAI;wBACrB,UAAU,CAAC;4BACT,KAAI,CAAC,SAAS,GAAG,KAAK;wBACxB,CAAC,EAAE,KAAK,CAAC,CAAC;;;wBAGV,OAAO,CAAC,GAAG,CAAC,4BAA4B,CAAC;wBACzC,SAAI;wBAAW,qBAAM,6CAAI,CAAC,GAAG,CAAC,UAAU,CAAC,+CAAM,CAAC,OAAO,CAAC,OAAO,CAAC;;wBAAhE,GAAK,OAAO,GAAG,SAAiD,CAAC;wBACjE,IAAI,CAAC,OAAO,GAAG,6CAAI,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC;wBACzD,OAAO,CAAC,GAAG,CAAC,yCAAyC,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC;wBAEtE,IAAI,CAAC,OAAO,GAAG,IAAI;wBACnB,UAAU,CAAC;4BACT,KAAI,CAAC,OAAO,GAAG,KAAK;wBACtB,CAAC,EAAE,KAAK,CAAC,CAAC;;;wBAGZ,IAAI,CAAC,SAAS,GAAG,KAAK;;;;aAEvB;IArJ2D,CAAC;IAEvD,sCAAQ,GAAd;;;;;;wBAEE,OAAO,CAAC,GAAG,CAAC,iBAAiB,GAAG,6CAAI,CAAC,OAAO,CAAC,CAAC;wBAE9C,6CAAI,CAAC,GAAG,CAAC,WAAW,EAAE,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;wBAEzC,SAAI;wBAAW,qBAAM,6CAAI,CAAC,GAAG,CAAC,UAAU,CAAC,+CAAM,CAAC,OAAO,CAAC,OAAO,CAAC;;wBAAhE,GAAK,OAAO,GAAG,SAAiD,CAAC;wBACjE,IAAI,CAAC,OAAO,GAAG,6CAAI,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC;wBACzD,OAAO,CAAC,GAAG,CAAC,yCAAyC,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC;wBAEtE,SAAI;wBAAiB,qBAAM,+CAAM,CAAC,OAAO,CAAC,gBAAgB,EAAE,CAAC,IAAI,EAAE;;wBAAnE,GAAK,aAAa,GAAG,SAA8C,CAAC;wBACpE,OAAO,CAAC,GAAG,CAAC,gCAAgC,GAAG,IAAI,CAAC,aAAa,CAAC,CAAC;;;;;KAEpE;IAEK,gDAAkB,GAAxB;;;;;;wBACE,SAAI;wBAAW,qBAAM,+CAAM,CAAC,OAAO,CAAC,OAAO,EAAE,CAAC,IAAI,EAAE;;wBAApD,GAAK,OAAO,GAAG,SAAqC,CAAC;wBACrD,OAAO,CAAC,GAAG,CAAC,gCAAgC,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC;wBAC7D,OAAO,CAAC,GAAG,CAAC,oDAAoD,GAAG,IAAI,CAAC,iBAAiB,CAAC,OAAO,CAAC,CAAC;wBAEnG,SAAI;wBAAW,qBAAM,+CAAM,CAAC,OAAO,CAAC,UAAU,EAAE,CAAC,IAAI,EAAE;;wBAAvD,GAAK,OAAO,GAAG,SAAwC,CAAC;wBACxD,OAAO,CAAC,GAAG,CAAC,0BAA0B,GAAG,IAAI,CAAC,OAAO,CAAC;wBAGtD,OAAO,CAAC,GAAG,CAAC,iEAAiE,GAAG,IAAI,CAAC,UAAU,CAAC,CAAC;wBAGjG,SAAI;wBAAgB,qBAAM,+CAAM,CAAC,OAAO,CAAC,eAAe,EAAE,CAAC,IAAI,EAAE;;wBAAjE,GAAK,WAAW,GAAI,SAA6C,CAAC;wBAClE,OAAO,CAAC,GAAG,CAAC,uDAAuD,GAAG,IAAI,CAAC,WAAW,CAAC,CAAC;wBAGxF,SAAI;wBAAgB,qBAAM,+CAAM,CAAC,OAAO,CAAC,UAAU,EAAE,CAAC,IAAI,EAAE;;wBAA5D,GAAK,YAAY,GAAG,SAAwC,CAAC;wBAC7D,IAAI,CAAC,iBAAiB,CAAC,WAAW,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;wBACtD,OAAO,CAAC,GAAG,CAAC,yCAAyC,GAAG,IAAI,CAAC,iBAAiB,CAAC,eAAe,EAAE,CAAC,CAAC;wBAClG,OAAO,CAAC,GAAG,CAAC,kBAAkB,GAAG,IAAI,CAAC,YAAY,CAAC,CAAC;wBACpD,OAAO,CAAC,GAAG,CAAC,iCAAiC,GAAG,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,CAAC;wBAGtE,OAAO,CAAC,GAAG,CAAC,wCAAwC,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC;wBAGrE,SAAI;wBAAgB,qBAAM,+CAAM,CAAC,OAAO,CAAC,eAAe,EAAE,CAAC,IAAI,EAAE;;wBAAjE,GAAK,WAAW,GAAI,SAA6C,CAAC;wBAClE,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC;wBACjC,OAAO,CAAC,GAAG,CAAC,+BAA+B,GAAG,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC;;;;;KAIrG;;gBA/EM,qEAAiB;;IASb,mBAAmB;QAN/B,+DAAS,CAAC;YACT,QAAQ,EAAE,iBAAiB;YAC3B,wFAA2C;YAE3C,SAAS,EAAE,CAAC,qEAAiB,CAAC;;SAC/B,CAAC;yCAsBuC,qEAAiB;OArB7C,mBAAmB,CA6K/B;IAAD,0BAAC;CAAA;AA7K+B;;;;;;;;;;;;;ACdhC;AAAe,sEAAO,6CAA6C,SAAS,mBAAmB,sBAAsB,qBAAqB,oBAAoB,sCAAsC,+BAA+B,yCAAyC,oCAAoC,2DAA2D,oCAAoC,+BAA+B,kCAAkC,SAAS,wBAAwB,sBAAsB,qBAAqB,oBAAoB,gCAAgC,gCAAgC,yCAAyC,KAAK,kCAAkC,4BAA4B,0BAA0B,uBAAuB,wBAAwB,2BAA2B,mBAAmB,2BAA2B,SAAS,8BAA8B,sCAAsC,qBAAqB,mBAAmB,2BAA2B,KAAK,oCAAoC,oCAAoC,OAAO,2DAA2D,mrEAAmrE,E;;;;;;;;;;;;ACAh0G;AAAA;AAAA;AAAA;AAAwD;AACzB;AAE/B;IAAA;QACI,uBAAkB,GAAG,IAAI,4CAAO,EAAgB,CAAC;QACjD,mBAAc,GAAG,IAAI,4CAAO,EAAU,CAAC;QAC/B,gBAAW,GAAiB;YAChC,IAAI,mEAAU,CAAC,QAAQ,EAAE,CAAC,CAAC;YAC3B,IAAI,mEAAU,CAAC,UAAU,EAAE,EAAE,CAAC;SAC/B,CAAC;IA+BR,CAAC;IA7BG,4CAAc,GAAd;QACI,OAAO,IAAI,CAAC,WAAW,CAAC,KAAK,EAAE,CAAC;IACpC,CAAC;IAAA,CAAC;IAEF,2CAAa,GAAb,UAAc,KAAa;QACvB,OAAO,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;IACnC,CAAC;IAED,2CAAa,GAAb,UAAc,UAAsB;QAChC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;QAClC,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,KAAK,EAAE,CAAC,CAAC;IAC3D,CAAC;IAED,4CAAc,GAAd,UAAe,WAAyB;;QACpC,UAAI,CAAC,WAAW,EAAC,IAAI,WAAI,WAAW,EAAE;QACtC,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,KAAK,EAAE,CAAC;IAC1D,CAAC;IAED,8CAAgB,GAAhB,UAAiB,KAAa,EAAE,aAAyB;QACrD,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,GAAG,aAAa,CAAC;QACxC,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,KAAK,EAAE,CAAC,CAAC;IAC3D,CAAC;IAED,8CAAgB,GAAhB,UAAiB,KAAa;QAC1B,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;QAClC,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,KAAK,EAAE,CAAC,CAAC;IAC3D,CAAC;IAGL,0BAAC;AAAD,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACxCiD;AACO;AAGP;;IAUhD,6BAAoB,aAA4B,EAC5B,MAAc,EACd,KAAqB;QAFrB,kBAAa,GAAb,aAAa,CAAe;QAC5B,WAAM,GAAN,MAAM,CAAQ;QACd,UAAK,GAAL,KAAK,CAAgB;IAAI,CAAC;IAE9C,sCAAQ,GAAR;QACE,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,aAAa,CAAC,UAAU,EAAE,CAAC;IACjD,CAAC;IAED,yCAAW,GAAX;QACE,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,KAAK,CAAC,EAAE,EAAC,UAAU,EAAE,IAAI,CAAC,KAAK,EAAC,CAAC;IACzD,CAAC;;gBApBM,6DAAa;gBAHG,sDAAM;gBAAtB,8DAAc;;IAUV,mBAAmB;QAL/B,+DAAS,CAAC;YACT,QAAQ,EAAE,iBAAiB;YAC3B,wFAA2C;;SAE5C,CAAC;yCAImC,6DAAa;YACpB,sDAAM;YACP,8DAAc;OAL9B,mBAAmB,CAe/B;IAAD,0BAAC;CAAA;AAf+B;;;;;;;;;;;;;ACXhC;AAAe,+IAAgF,WAAW,mEAAmE,kBAAkB,cAAc,kBAAkB,mTAAmT,SAAS,+wLAA+wL,cAAc,GAAG,cAAc,yXAAyX,cAAc,GAAG,cAAc,qtDAAqtD,E;;;;;;;;;;;;ACAt7Q;AAAe,6GAA8C,mIAAmI,E;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAnI;AAIC;;IAW5D,+BAAoB,SAA8B;QAA9B,cAAS,GAAT,SAAS,CAAqB;IAAI,CAAC;IAEvD,wCAAQ,GAAR;QAAA,iBAQC;QAPC,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,SAAS,CAAC,cAAc,EAAE,CAAC;QACnD,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,SAAS,CAAC,kBAAkB;aACnD,SAAS,CACR,UAAC,WAAyB;YACxB,KAAI,CAAC,WAAW,GAAG,WAAW,CAAC;QACjC,CAAC,CACF,CAAC;IACJ,CAAC;IAED,0CAAU,GAAV,UAAW,KAAa;QACtB,IAAI,CAAC,SAAS,CAAC,cAAc,CAAC,IAAI,CAAC,KAAK,CAAC;IAC3C,CAAC;IAID,2CAAW,GAAX;QACE,IAAI,CAAC,WAAW,CAAC,WAAW,EAAE,CAAC;IACjC,CAAC;;gBA/BM,0EAAmB;;IAOf,qBAAqB;QALjC,+DAAS,CAAC;YACT,QAAQ,EAAE,mBAAmB;YAC7B,0FAA6C;;SAE9C,CAAC;yCAK+B,0EAAmB;OAJvC,qBAAqB,CA2BjC;IAAD,4BAAC;CAAA;AA3BiC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACXO;AACc;AACmB;AACpB;AACe;AACZ;AAC+B;AACN;AACG;AACtB;AACiB;AAEhF,IAAM,SAAS,GAAW;IACtB,EAAE,IAAI,EAAE,EAAE,EAAE,UAAU,EAAE,OAAO,EAAE,SAAS,EAAE,MAAM,EAAE;IACpD,EAAE,IAAI,EAAE,MAAM,EAAE,SAAS,EAAE,kEAAa,EAAE;IAC1C,EAAE,IAAI,EAAE,SAAS,EAAE,SAAS,EAAE,2EAAgB,EAAE,QAAQ,EAAE;YACtD,EAAE,IAAI,EAAE,EAAE,EAAE,SAAS,EAAE,iGAAoB,EAAE;YAC7C,EAAE,IAAI,EAAE,KAAK,EAAE,SAAS,EAAE,8FAAmB,EAAE;YAC/C,EAAE,IAAI,EAAE,KAAK,EAAE,SAAS,EAAE,oGAAqB,EAAE;YACjD,EAAE,IAAI,EAAE,UAAU,EAAE,SAAS,EAAE,8FAAmB,EAAE;SACvD,EAAE;IACH,EAAE,IAAI,EAAE,eAAe,EAAE,SAAS,EAAE,6FAAqB,EAAE;IAC3D,EAAE,IAAI,EAAE,WAAW,EAAE,SAAS,EAAE,iFAAkB,EAAE;IACpD,EAAE,IAAI,EAAE,aAAa,EAAE,SAAS,EAAE,sFAAmB,EAAE;IACvD,EAAE,IAAI,EAAE,OAAO,EAAE,SAAS,EAAE,qEAAc,EAAE;CAC/C;;;IASD,CAAC;IAFY,gBAAgB;QAL5B,8DAAQ,CAAC;YACN,OAAO,EAAE,CAAC,4DAAY,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC;YAC1C,OAAO,EAAE,CAAC,4DAAY,CAAC;SAC1B,CAAC;OAEW,gBAAgB,CAE5B;IAAD,uBAAC;CAAA;AAF4B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AChCqB;AACe;AAEf;;IAWhD,+BAAoB,aAA4B,EACtC,KAAqB,EACrB,MAAc;QAFJ,kBAAa,GAAb,aAAa,CAAe;QACtC,UAAK,GAAL,KAAK,CAAgB;QACrB,WAAM,GAAN,MAAM,CAAQ;IAAI,CAAC;IAE7B,wCAAQ,GAAR;QAAA,iBAQG;QAPD,IAAI,CAAC,KAAK,CAAC,MAAM;aAChB,SAAS,CACR,UAAC,MAAc;YACb,KAAI,CAAC,EAAE,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;YACxB,KAAI,CAAC,MAAM,GAAG,KAAI,CAAC,aAAa,CAAC,SAAS,CAAC,KAAI,CAAC,EAAE,CAAC,CAAC;QACtD,CAAC,CACA,CAAC;IACJ,CAAC;IAEH,mDAAmB,GAAnB;QACE,IAAI,CAAC,aAAa,CAAC,4BAA4B,CAAC,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC;IAC1E,CAAC;IAED,4CAAY,GAAZ;QACE,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,MAAM,CAAC,EAAE,EAAC,UAAU,EAAE,IAAI,CAAC,KAAK,EAAC,CAAC;IAC1D,CAAC;;gBA/BM,6DAAa;gBAFb,8DAAc;gBAAU,sDAAM;;IAS1B,qBAAqB;QALjC,+DAAS,CAAC;YACT,QAAQ,EAAE,mBAAmB;YAC7B,0FAA6C;;SAE9C,CAAC;yCAKmC,6DAAa;YAC/B,8DAAc;YACb,sDAAM;OANb,qBAAqB,CA0BjC;IAAD,4BAAC;CAAA;AA1BiC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACVgB;AACvB;AACmC;AACJ;;IAWxD,wBAAoB,iBAAoC;QAApC,sBAAiB,GAAjB,iBAAiB,CAAmB;IAAI,CAAC;IAE7D,iCAAQ,GAAR;IACA,CAAC;IAEK,0CAAiB,GAAvB;;;;;;wBACE,OAAO,CAAC,GAAG,CAAC,iBAAiB,GAAG,6CAAI,CAAC,OAAO,CAAC,CAAC;wBAC9C,6CAAI,CAAC,GAAG,CAAC,WAAW,EAAE,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;wBAExB,qBAAM,gEAAsB,EAAE;;wBAAzC,QAAQ,GAAG,SAA8B;wBAC/C,OAAO,CAAC,GAAG,CAAC,6CAA6C,GAAG,QAAQ,CAAC,CAAC;wBACtE,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,QAAQ,CAAC;wBAE5B,qBAAM,gEAAsB,EAAE;4BAG9B,oEAAoE;0BAHtC;;wBAA9B,SAA8B;;;;;KAU/B;;gBAlCM,qEAAiB;;IASb,cAAc;QAL1B,+DAAS,CAAC;YACT,QAAQ,EAAE,WAAW;YACrB,kFAAqC;;SAEtC,CAAC;yCAGuC,qEAAiB;OAF7C,cAAc,CA2B1B;IAAD,qBAAC;CAAA;AA3B0B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACZuB;AACiB;AACV;AACP;;IAYhD,6BAAoB,KAAqB,EACrB,aAA4B;QAD5B,UAAK,GAAL,KAAK,CAAgB;QACrB,kBAAa,GAAb,aAAa,CAAe;QAJhD,aAAQ,GAAG,KAAK,CAAC;IAImC,CAAC;IAErD,sCAAQ,GAAR;QAAA,iBAQC;QAPC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,SAAS,CACzB,UAAC,MAAc;YACb,KAAI,CAAC,EAAE,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;YACxB,KAAI,CAAC,QAAQ,GAAG,MAAM,CAAC,IAAI,CAAC,IAAI,IAAI,CAAC;YACrC,KAAI,CAAC,QAAQ,EAAE,CAAC;QAClB,CAAC,CACF;IACH,CAAC;IAED,sCAAQ,GAAR;QACE,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,UAAU,CAAC;IAC9B,CAAC;IAED,6CAAe,GAAf;QACc,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,aAAa,CAAE,CAAC,IAAI,CAClD,IAAI,wDAAS,CAAC;YACZ,MAAM,EAAE,IAAI,0DAAW,EAAE;YACzB,QAAQ,EAAE,IAAI,0DAAW,EAAE;SAC5B,CAAC,CACH;IACH,CAAC;IAEO,sCAAQ,GAAhB;QACE,IAAI,UAAU,GAAG,EAAE,CAAC;QACpB,IAAI,eAAe,GAAG,EAAE,CAAC;QACzB,IAAI,iBAAiB,GAAG,EAAE,CAAC;QAC3B,IAAI,iBAAiB,GAAG,IAAI,wDAAS,CAAC,EAAE,CAAC,CAAC;QAE1C,IAAI,IAAI,CAAC,QAAQ,EAAE;YACjB,IAAM,MAAM,GAAG,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;YACrD,UAAU,GAAG,MAAM,CAAC,IAAI,CAAC;YACzB,eAAe,GAAG,MAAM,CAAC,SAAS,CAAC;YACnC,iBAAiB,GAAG,MAAM,CAAC,WAAW,CAAC;YACvC,IAAI,MAAM,CAAC,aAAa,CAAC,EAAE;gBACzB,KAAuB,UAAkB,EAAlB,WAAM,CAAC,WAAW,EAAlB,cAAkB,EAAlB,IAAkB,EAAE;oBAAtC,IAAI,UAAU;oBACjB,iBAAiB,CAAC,IAAI,CACpB,IAAI,wDAAS,CAAC;wBACZ,MAAM,EAAE,IAAI,0DAAW,CAAC,UAAU,CAAC,IAAI,CAAC;wBACxC,QAAQ,EAAE,IAAI,0DAAW,CAAC,UAAU,CAAC,MAAM,CAAC;qBAC7C,CAAC,CACH;iBACF;aACF;SACF;QACD,IAAI,CAAC,UAAU,GAAG,IAAI,wDAAS,CAAC;YAC9B,MAAM,EAAE,IAAI,0DAAW,CAAC,UAAU,CAAC;YACnC,WAAW,EAAE,IAAI,0DAAW,CAAC,eAAe,CAAC;YAC7C,aAAa,EAAE,IAAI,0DAAW,CAAC,iBAAiB,CAAC;YACjD,aAAa,EAAE,iBAAiB;SACjC,CAAC,CAAC;IACL,CAAC;;gBAnEM,8DAAc;gBACd,6DAAa;;IAOT,mBAAmB;QAL/B,+DAAS,CAAC;YACT,QAAQ,EAAE,iBAAiB;YAC3B,wFAA2C;;SAE5C,CAAC;yCAM2B,8DAAc;YACN,6DAAa;OANrC,mBAAmB,CA6D/B;IAAD,0BAAC;CAAA;AA7D+B;;;;;;;;;;;;;ACVhC;AAAA;AAAA;AAAA;AAAA;AAA+C;AAC4B;AAE9B;AACY;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,gGAAsB,EAAE,CAAC,eAAe,CAAC,yDAAS,CAAC;KAChD,KAAK,CAAC,aAAG,IAAI,cAAO,CAAC,GAAG,CAAC,GAAG,CAAC,EAAhB,CAAgB,CAAC,CAAC;;;;;;;;;;;;;ACXlC;AAAe,6GAA8C,2HAA2H,E","file":"main.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport web3 from '../web3';\nimport policy from '../policy';\nimport report from '../report';\nimport { BlockchainService } from '../blockchain.service';\nimport { NgForm } from '@angular/forms';\n\n@Component({\n  selector: 'app-insurance',\n  templateUrl: './insurance.component.html',\n  styleUrls: ['./insurance.component.css']\n})\nexport class InsuranceComponent implements OnInit {\n\n  public beneficiaries = [];\n  public reportStruct;\n  public manager;\n  public value;\n  public balance;\n  public isLoading = false;\n  public isSuccess = false;\n  public reportCount;\n\n \n  constructor(private blockchainService: BlockchainService) { }\n\n  async ngOnInit() {\n    this.blockchainService.sharedMessage.subscribe(test => console.log(test));\n    \n    this.balance = await web3.eth.getBalance(policy.options.address);\n    this.balance = web3.utils.fromWei(this.balance, 'ether');\n    console.log('Function getBalance() works, balance = ' + this.balance);\n    \n  }\n\n\n  async ngAfterContentInit() {\n\n    this.manager = await report.methods.manager().call();\n    console.log('This contract is managed by ' + this.manager);\n\n    this.beneficiaries = await policy.methods.getBeneficiaries().call();\n    console.log('Function getBeneficiaries() = ' + this.beneficiaries);\n\n\n    this.reportStruct = await report.methods.getReports().call();\n    console.log(this.blockchainService.nextMessage(this.reportStruct));\n\n    console.log(this.reportStruct);\n    console.log(this.reportStruct.length);\n    console.log(this.reportStruct[0].recipient);\n\n\n    \n    this.balance = await web3.eth.getBalance(policy.options.address);\n    this.balance = web3.utils.fromWei(this.balance, 'ether');\n    console.log('Function getBalance() works, balance = ' + this.balance);\n\n\n    }\n\n\n    async onEnter(form: NgForm) {\n\n\n      this.isLoading = true\n      await policy.methods.enter().send({\n        from: this.manager,\n        value: web3.utils.toWei(form.value.amount, 'ether')\n      });\n\n\n      this.balance = await web3.eth.getBalance(policy.options.address);\n      this.balance = web3.utils.fromWei(this.balance, 'ether');\n\n\n      console.log('Function onEnter() complete, amount entered is = ' + web3.utils.toWei(form.value.amount, 'ether'));\n      \n      \n      this.isLoading = false\n      this.isSuccess = true\n\n     \n\n      setTimeout(() => {\n        this.isSuccess = false\n      }, 10000);\n\n\n\n\n    }\n\n    async payBeneficiaries() {\n      this.isLoading = true\n\n      this.reportCount = this.reportCount =  await report.methods.getReportsCount().call();\n  \n      if (this.reportStruct[this.reportCount - 1].meansOfDeath != 'Undetermined') {\n        await policy.methods.payBeneficiaries().send({from : this.manager});\n        console.log('Beneficiaries paid-out');\n  \n  \n      } else {\n        console.log('Beneficiaries not paid-out')\n      }\n  \n      this.isLoading = false\n    }\n\n\n    \n    \n  }\n\n\n\n\n","export default \"<div class=\\\"row\\\">\\n  <div class=\\\"col-xs-10\\\">\\n    <app-shopping-edit></app-shopping-edit>\\n    <hr>\\n    <ul class=\\\"list-group\\\">\\n      <a\\n        class=\\\"list-group-item\\\"\\n        style=\\\"cursor: pointer\\\"\\n        *ngFor=\\\"let ingredient of ingredients; let i = index\\\"\\n        (click)=\\\"onEditItem(i)\\\"\\n      >\\n        {{ ingredient.name }} ({{ ingredient.amount }})\\n      </a>\\n    </ul>\\n  </div>\\n</div>\\n\";","/* (ignored) */","/* (ignored) */","/* (ignored) */","export default \"<a\\n      style=\\\"cursor: pointer;\\\"\\n      [routerLink]=\\\"[index]\\\"\\n      routerLinkActive=\\\"active\\\"\\n      class=\\\"list-group-item clearfix\\\">\\n      <div class=\\\"pull-left\\\">\\n        <h4 class=\\\"list-group-item-heading\\\">{{ recipe.name }}</h4>\\n        <p class=\\\"list-group-item-text\\\">{{ recipe.description }}</p>\\n      </div>\\n      <span class=\\\"pull-right\\\">\\n        <img\\n          [src]=\\\"recipe.imagePath\\\"\\n          alt=\\\"{{ recipe.name }}\\\"\\n          class=\\\"img-responsive\\\"\\n          style=\\\"max-height: 50px;\\\">\\n      </span>\\n    </a>\";","import { Directive, HostBinding, HostListener } from \"@angular/core\";\r\n\r\n@Directive({\r\n    selector: '[appDropdown]'\r\n})\r\n\r\nexport class DropdownDirective {\r\n    @HostBinding('class.open') isOpen = false;\r\n    \r\n    @HostListener('click') toggleOpen() {\r\n        this.isOpen = !this.isOpen;\r\n    }\r\n}","/* (ignored) */","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJyZWNpcGUtbGlzdC5jb21wb25lbnQuY3NzIn0= */\";","/* (ignored) */","/* (ignored) */","/* (ignored) */","import Web3 from \"web3\";\r\n \r\nwindow.ethereum.request({ method: \"eth_requestAccounts\" });\r\n \r\nconst web3 = new Web3(window.ethereum);\r\n \r\nexport default web3;","export class Ingredient {\n  constructor(public name: string, public amount: number) {}\n}\n","import { Component, HostListener, OnInit, Output } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor(private router: Router) { }\n\n  ngOnInit(): void {\n  }\n\n\n\n\n  @HostListener('document:click', ['$event'])\n  public documentClick(event: Event): void {\n    this.router.navigate(['/insurance']);\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhcHAuY29tcG9uZW50LmNzcyJ9 */\";","import { Injectable } from '@angular/core';\nimport { BehaviorSubject, from } from 'rxjs';\nimport web3 from './web3';\nimport report from './report';\nimport policy from './policy';\nimport { NgForm } from '@angular/forms';\nimport detectEthereumProvider from '@metamask/detect-provider';\n\n\n@Injectable()\nexport class BlockchainService {\n\n  private subject = new BehaviorSubject('First Message');\n  sharedMessage = this.subject.asObservable();\n\n\n\n\n  public manager;\n  public players;\n  public balance;\n  public reports;\n  public reportCount;\n  public reportList;\n  public reportStruct = this.subject.asObservable();\n  \n\n\n\n\n\n  constructor() { }\n\n\n\n\n\n\n\n  \n\n\n  nextMessage(reportStruct) {\n    this.subject.next(reportStruct)\n  }\n\n\n\n\n\n\n\n\n\n\n  ngOnInit(): void {\n\n    console.log('Web3 version = ' + web3.version);\n\n    web3.eth.getAccounts().then(console.log);\n\n  }\n\n  async ngAfterContentInit() {\n    this.manager = await report.methods.manager().call();\n    console.log('This contract is managed by ' + this.manager);\n\n    this.players = await report.methods.getPlayers().call();\n    console.log('Function getPlayers() = ' + this.players)\n\n    this.balance = await web3.eth.getBalance(report.options.address);\n    this.balance = web3.utils.fromWei(this.balance, 'ether')\n    console.log('Function getBalance() = ' + this.balance)\n\n    console.log('Function getReportsCount() to display list array of  Reports = ' + this.reportList);\n\n\n    this.reportCount =  await report.methods.getReportsCount().call();\n    console.log('Function getReportsCount() works, Type reportCount = ' + this.reportCount);\n\n    \n    this.reportStruct = await report.methods.getReports().call();\n    console.log('Report struct = ' + this.reportStruct);\n    console.log('Report struct one whole item = ' + this.reportStruct[0]);\n    console.log('Report struct name = ' + this.reportStruct[0].name);\n\n\n    console.log('Function createReport is called and = ' + this.reports);\n\n\n\n    \n  }\n\n\n\n\n\n  onSubmit = async (form: NgForm) => { \n    event.preventDefault();\n    console.log(form);\n\n\n    // import factory campaign\n\n    // const accounts = await web3.eth.getAccounts();\n    // console.log(accounts); \n\n\n\n    // await report.methods.createRequest()\n\n    // console.log(form.value.name)\n\n\n\n    // return reports \n\n\n    this.reportList =  Promise.all(\n      Array(parseInt(this.reportCount))\n        .fill(0, this.reportCount)\n        .map((element, index) => {\n          return report.methods.requests(index).call();\n        })\n    );\n\n    this.reportCount =  await report.methods.getReportsCount().call();\n\n    // prints the name and address for each report in the list\n    // for (let i = 0; i < this.reportStruct.length; i++) {\n    //  console.log('name: ' + this.reportStruct[i].name);\n    //  console.log('address: ' + this.reportStruct[i].address);\n    // }\n\n\n\n    this.reports = await report.methods.createReport(form.value.name, this.manager).send({ from: this.manager });\n    console.log('Function createReport is called and = ' + this.reports)\n\n\n\n    \n    this.reportStruct = await report.methods.getReports().call();\n    console.log('Function getReportsCount() works, Type reportCount = ' + this.reportCount);\n    console.log('Report struct = ' + this.reportStruct);\n    console.log('Report struct name = ' + this.reportStruct[0].name);\n\n\n\n    \n\n\n\n  }\n\n\n\n\n\n\n\n\n\n\n\n  async getReportStruct() {\n    this.reportStruct = await report.methods.getReports().call();\n  }\n\n\n\n  async payBeneficiaries(lastArrayItem) {\n    \n     if (this.reportStruct[lastArrayItem].meansOfDeaths != 'Undetermined') {\n        await policy.methods.payBeneficiaries().send({from : this.manager});\n        console.log('Beneficiaries paid-out');\n\n\n      } else {\n        console.log('Beneficiaries not paid-out')\n      }\n    \n  }\n\n\n\n\n  public signInWithMetaMask() {\n    let ethereum: any;\n\n  return from(detectEthereumProvider()).pipe()\n\n\n  }\n\n\n\n\n}\n","export default \"<div class=\\\"row\\\">\\n  <div class=\\\"col-md-5\\\">\\n    <app-recipe-list></app-recipe-list>\\n  </div>\\n  <div class=\\\"col-md-7\\\">\\n    <router-outlet></router-outlet>\\n  </div>\\n</div>\\n\";","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","export default \"<div class=\\\"banner\\\"></div>\\n\\n\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJpbnN1cmFuY2UuY29tcG9uZW50LmNzcyJ9 */\";","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-recipe-start',\n  templateUrl: './recipe-start.component.html',\n  styleUrls: ['./recipe-start.component.css']\n})\nexport class RecipeStartComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJoZWFsdGgtY2FyZS5jb21wb25lbnQuY3NzIn0= */\";","export default \"<div class=\\\"row\\\">\\n  <div class=\\\"col-xs-12\\\">\\n    <button class=\\\"btn btn-success\\\" (click)=\\\"onNewRecipe()\\\">New Recipe</button>\\n  </div>\\n</div>\\n<hr>\\n<div class=\\\"row\\\">\\n  <div class=\\\"col-xs-12\\\">\\n    <app-recipe-item \\n    *ngFor=\\\"let recipeEl of recipes; let i = index\\\"\\n    [recipe]=\\\"recipeEl\\\"\\n    [index]=\\\"i\\\"></app-recipe-item>\\n  </div>\\n</div>\\n\\n\";","export default \".banner\\r\\n{\\r\\n    background-image: url('home.png');\\r\\n    background-position: center;\\r\\n    background-size: cover;\\r\\n\\r\\n\\r\\n    position: fixed; \\r\\n    top: 0; \\r\\n    left: 0; \\r\\n      \\r\\n    /* Preserve aspect ratio */\\r\\n    min-width: 100%;\\r\\n    min-height: 100%;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImhvbWUuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7SUFFSSxpQ0FBZ0Q7SUFDaEQsMkJBQTJCO0lBQzNCLHNCQUFzQjs7O0lBR3RCLGVBQWU7SUFDZixNQUFNO0lBQ04sT0FBTzs7SUFFUCwwQkFBMEI7SUFDMUIsZUFBZTtJQUNmLGdCQUFnQjtBQUNwQiIsImZpbGUiOiJob21lLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuYmFubmVyXHJcbntcclxuICAgIGJhY2tncm91bmQtaW1hZ2U6IHVybCguLi8uLi9hc3NldHMvaW1nL2hvbWUucG5nKTtcclxuICAgIGJhY2tncm91bmQtcG9zaXRpb246IGNlbnRlcjtcclxuICAgIGJhY2tncm91bmQtc2l6ZTogY292ZXI7XHJcblxyXG5cclxuICAgIHBvc2l0aW9uOiBmaXhlZDsgXHJcbiAgICB0b3A6IDA7IFxyXG4gICAgbGVmdDogMDsgXHJcbiAgICAgIFxyXG4gICAgLyogUHJlc2VydmUgYXNwZWN0IHJhdGlvICovXHJcbiAgICBtaW4td2lkdGg6IDEwMCU7XHJcbiAgICBtaW4taGVpZ2h0OiAxMDAlO1xyXG59Il19 */\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJyZWNpcGUtaXRlbS5jb21wb25lbnQuY3NzIn0= */\";","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n\n\n  ngOnInit() {}\n\n\n\n}\n","export default \"<h2>Life Insurance Smart Contract</h2>\\n\\n<p>This contract is managed by {{ manager }}</p>\\n<p>The beneficiaries of this Life Insurance policy are:</p>\\n<li> {{beneficiaries[0]}}</li>\\n<li> {{beneficiaries[1]}}</li>\\n\\n<hr>\\n\\n<div class=\\\"container\\\">\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-xs-12\\\">\\n            <form (ngSubmit)=\\\"onEnter(f)\\\" #f=\\\"ngForm\\\">\\n                <div id=\\\"user-data\\\">\\n                    <div class=\\\"form-group\\\">\\n                        <label for=\\\"amount\\\">Amount of Ethereum in this Smart Contract = {{balance}} Ether</label>\\n                        <input \\n                        type=\\\"text\\\"\\n                        id=\\\"amount\\\"\\n                        class=\\\"form-control\\\"\\n                        ngModel\\n                        name=\\\"amount\\\">\\n                    </div>\\n                    <div>\\n                        <button [disabled]=\\\"isLoading\\\" class=\\\"btn btn-primary\\\" type=\\\"submit\\\" style='margin-right:16px'>\\n                            <img *ngIf=\\\"isLoading\\\" width=\\\"20px\\\" src=\\\"../../assets/img/spinner.gif\\\"/> Enter Amount</button>\\n                        <button [disabled]=\\\"isLoading\\\" class=\\\"btn btn-default\\\" type=\\\"button\\\" style='margin-right:16px' (click)=\\\"payBeneficiaries()\\\">\\n                            <img *ngIf=\\\"isLoading\\\" width=\\\"20px\\\" src=\\\"../../assets/img/spinner.gif\\\"/> Pay Beneficiaries</button>\\n                    </div> <br>\\n                    <div *ngIf=\\\"isSuccess\\\" class=\\\"alert alert-success\\\">\\n                        <strong>Success!</strong> Ethereum has been entered into the life insurance smart contract. \\n                      </div>\\n                </div>\\n            </form>\\n        </div>\\n    </div>\\n</div>\\n\\n\";","import { Component, Input, OnInit } from '@angular/core';\nimport { Recipe } from '../../recipe.model';\n\n@Component({\n  selector: 'app-recipe-item',\n  templateUrl: './recipe-item.component.html',\n  styleUrls: ['./recipe-item.component.css']\n})\nexport class RecipeItemComponent implements OnInit {\n  @Input() recipe: Recipe;\n  @Input() index: number;\n\n\n  ngOnInit() {\n  }\n\n}\n","import { Component, OnDestroy, OnInit, ViewChild } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { Subscription } from 'rxjs';\nimport { Ingredient } from 'src/app/shared/ingredient.model';\nimport { ShoppingListService } from '../shopping-list.service';\n\n@Component({\n  selector: 'app-shopping-edit',\n  templateUrl: './shopping-edit.component.html',\n  styleUrls: ['./shopping-edit.component.css']\n})\nexport class ShoppingEditComponent implements OnInit, OnDestroy {\n  @ViewChild('f') slForm: NgForm;\n  subscription: Subscription;\n  editMode = false;\n  editedItemIndex: number;\n  editedItem: Ingredient;\n\n  constructor(private slService: ShoppingListService) { }\n\n  ngOnInit() {\n    this.subscription = this.slService.startedEditing\n    .subscribe(\n      (index: number) => {\n        this.editedItemIndex = index;\n        this.editMode = true;\n        this.editedItem = this.slService.getIngredient(index);\n        this.slForm.setValue({\n          name: this.editedItem.name,\n          amount: this.editedItem.amount\n        })\n      }\n    );\n  }\n\n  onSubmit(form: NgForm) {\n    const value = form.value;\n    const newIngredient = new Ingredient(value.name, value.amount);\n    if (this.editMode) {\n      this.slService.updateIngredient(this.editedItemIndex, newIngredient)\n    } else {\n      this.slService.addIngredient(newIngredient)\n    }\n    this.editMode = false;\n    form.reset();\n  }\n\n  onClear() {\n    this.slForm.reset();\n    this.editMode = false;\n  }\n\n  onDelete() {\n    this.slService.deleteIngredient(this.editedItemIndex);\n    this.onClear();\n  }\n\n  ngOnDestroy(): void {\n    this.subscription.unsubscribe();\n  }\n\n}\n","export default \"<app-header></app-header>\\n<div class=\\\"container\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-12\\\">\\n      <router-outlet></router-outlet>\\n    </div>\\n  </div>\\n</div>\\n\";","import web3 from './web3';\r\n\r\nconst address = '0x80FF401ea96c2E4a9Dcbc7549B16a28AdaA8D58A';\r\n\r\nconst abi = [{\"constant\":true,\"inputs\":[],\"name\":\"getReportsCount\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"manager\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"pickWinner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getPlayers\",\"outputs\":[{\"name\":\"\",\"type\":\"address[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getReports\",\"outputs\":[{\"components\":[{\"name\":\"recipient\",\"type\":\"address\"},{\"name\":\"name\",\"type\":\"string\"},{\"name\":\"dateOfDeath\",\"type\":\"string\"},{\"name\":\"timeOfDeath\",\"type\":\"string\"},{\"name\":\"placeOfDeath\",\"type\":\"string\"},{\"name\":\"city\",\"type\":\"string\"},{\"name\":\"postalCode\",\"type\":\"string\"},{\"name\":\"country\",\"type\":\"string\"},{\"name\":\"province\",\"type\":\r\n\"string\"},{\"name\":\"medicalCauseOfDeath\",\"type\":\"string\"},{\"name\":\"meansOfDeath\",\"type\":\"string\"}],\"name\":\"\",\"type\":\"tuple[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"reports\",\"outputs\":[{\"name\":\"recipient\",\"type\":\"address\"},{\"name\":\"name\",\"type\":\"string\"},{\"name\":\"dateOfDeath\",\"type\":\"string\"},{\"name\":\"timeOfDeath\",\"type\":\"string\"},{\"name\":\"placeOfDeath\",\"type\":\"string\"},{\"name\":\"city\",\"type\":\"string\"},{\"name\":\"postalCode\",\"type\":\"string\"},{\"name\":\"country\",\"type\":\"string\"},{\"name\":\"province\",\"type\":\"string\"},{\"name\":\"medicalCauseOfDeath\",\"type\":\"string\"},{\"name\":\"meansOfDeath\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"recipient\",\"type\":\"address\"},\r\n{\"name\":\"name\",\"type\":\"string\"},{\"name\":\"dateOfDeath\",\"type\":\"string\"},{\"name\":\"timeOfDeath\",\"type\":\"string\"},{\"name\":\"placeOfDeath\",\"type\":\"string\"},{\"name\":\"city\",\"type\":\"string\"},{\"name\":\"postalCode\",\"type\":\"string\"},{\"name\":\"country\",\"type\":\"string\"},{\"name\":\"province\",\"type\":\"string\"},{\"name\":\"medicalCauseOfDeath\",\"type\":\"string\"},{\"name\":\"meansOfDeath\",\"type\":\"string\"}],\"name\":\"createReport\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"enter\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"players\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"}]\r\n\r\nexport default new web3.eth.Contract(abi, address);\r\n\r\n","import web3 from './web3';\r\n\r\nconst address = '0x00fE4937340967d12bd4e9B0B1e72F4a4b053f50';\r\n\r\nconst abi = [{\"constant\":true,\"inputs\":[],\"name\":\"getBalance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"policyHolder\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getBeneficiaries\",\"outputs\":[{\"name\":\"\",\"type\":\"address[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"enter\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"payBeneficiaries\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"beneficiaries\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"}]\r\n\r\nexport default new web3.eth.Contract(abi, address);\r\n\r\n","export default \"<div class=\\\"row\\\">\\n  <div class=\\\"col-xs-12\\\">\\n    <form (ngSubmit)=\\\"onSubmit(f)\\\" #f=\\\"ngForm\\\">\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-sm-5 form-group\\\">\\n          <label for=\\\"name\\\">Name</label>\\n          <input type=\\\"text\\\" id=\\\"name\\\" class=\\\"form-control\\\" name=\\\"name\\\" ngModel required>\\n        </div>\\n        <div class=\\\"col-sm-2 form-group\\\">\\n          <label for=\\\"amount\\\">Amount</label>\\n          <input type=\\\"number\\\" id=\\\"amount\\\" class=\\\"form-control\\\" name=\\\"amount\\\" ngModel required pattern=\\\"^[1-9]+[0-9]*$\\\">\\n        </div>\\n      </div>\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-xs-12\\\">\\n          <button class=\\\"btn btn-success\\\" type=\\\"submit\\\"[disabled]=\\\"!f.valid\\\">{{ editMode ? 'Update' : 'Add' }}</button>\\n          <button class=\\\"btn btn-danger\\\" type=\\\"button\\\" (click)=\\\"onDelete()\\\" *ngIf=\\\"editMode\\\">Delete</button>\\n          <button class=\\\"btn btn-primary\\\" type=\\\"button\\\" (click)=\\\"onClear()\\\">Clear</button>\\n        </div>\\n      </div>\\n    </form>\\n  </div>\\n</div>\\n\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzaG9wcGluZy1lZGl0LmNvbXBvbmVudC5jc3MifQ== */\";","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\n\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { HeaderComponent } from './header/header.component';\r\nimport { RecipesComponent } from './recipes/recipes.component';\r\nimport { RecipeListComponent } from './recipes/recipe-list/recipe-list.component';\r\nimport { RecipeDetailComponent } from './recipes/recipe-detail/recipe-detail.component';\r\nimport { RecipeItemComponent } from './recipes/recipe-list/recipe-item/recipe-item.component';\r\nimport { ShoppingListComponent } from './shopping-list/shopping-list.component';\r\nimport { ShoppingEditComponent } from './shopping-list/shopping-edit/shopping-edit.component';\r\nimport { DropdownDirective } from './shared/dropdown.directive';\r\nimport { ShoppingListService } from './shopping-list/shopping-list.service';\r\nimport { BlockchainService } from './blockchain.service';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { RecipeStartComponent } from './recipes/recipe-start/recipe-start.component';\r\nimport { RecipeEditComponent } from './recipes/recipe-edit/recipe-edit.component';\r\nimport { HealthCareComponent } from './health-care/health-care.component';\r\nimport { InsuranceComponent } from './insurance/insurance.component';\nimport { HomeComponent } from './home/home.component';\nimport { LoginComponent } from './login/login.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    HeaderComponent,\r\n    RecipesComponent,\r\n    RecipeListComponent,\r\n    RecipeDetailComponent,\r\n    RecipeItemComponent,\r\n    ShoppingListComponent,\r\n    ShoppingEditComponent,\r\n    DropdownDirective,\r\n    RecipeStartComponent,\r\n    RecipeEditComponent,\r\n    HealthCareComponent,\r\n    InsuranceComponent,\r\n    HomeComponent,\r\n    LoginComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    FormsModule,\r\n    AppRoutingModule,\r\n    ReactiveFormsModule,\r\n    BrowserAnimationsModule\r\n  ],\r\n  providers: [ShoppingListService, BlockchainService],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","export default \"<div class=\\\"row\\\">\\n    <div class=\\\"col-xs-12\\\">\\n        <form [formGroup]=\\\"recipeForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n            <div class=\\\"row\\\">\\n                <div class=\\\"col-xs-12\\\">\\n                    <button type=\\\"submit\\\" class=\\\"btn btn-success\\\">Save</button>\\n                    <button type=\\\"button\\\" class=\\\"btn btn-danger\\\">Cancel</button>\\n                </div>\\n            </div>\\n            <div class=\\\"row\\\">\\n                <div class=\\\"col-xs-12\\\">\\n                    <div class=\\\"form-group\\\">\\n                        <label for=\\\"name\\\">Name</label>\\n                        <input \\n                        type=\\\"text\\\"\\n                        id=\\\"name\\\"\\n                        formControlName=\\\"name\\\"\\n                        class=\\\"form-control\\\"\\n                        >\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"row\\\">\\n                <div class=\\\"col-xs-12\\\">\\n                    <div class=\\\"form-group\\\">\\n                        <label for=\\\"imagePath\\\">Image URL</label>\\n                        <input \\n                        type=\\\"text\\\"\\n                        id=\\\"imagePath\\\"\\n                        formControlName=\\\"imagePath\\\"\\n                        class=\\\"form-control\\\"\\n                        >\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"row\\\">\\n                <div class=\\\"col-xs-12\\\">\\n                    <img src=\\\"\\\" class=\\\"img-responsive\\\">\\n                </div>\\n            </div>\\n            <div class=\\\"row\\\">\\n                <div class=\\\"col-xs-12\\\">\\n                    <div class=\\\"form-group\\\">\\n                        <label for=\\\"description\\\">Description</label>\\n                        <textarea \\n                        type=\\\"text\\\"\\n                        id=\\\"description\\\"\\n                        class=\\\"form-control\\\"\\n                        formControlName=\\\"description\\\"\\n                        rows=\\\"6\\\"\\n                        ></textarea>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"row\\\">\\n                <div class=\\\"col-xs-12\\\" formArrayName=\\\"ingredient\\\">\\n                    <div class=\\\"row\\\" *ngFor=\\\"let ingredientCtrl of recipeForm.get('ingredients').controls; let i = index\\\" formGroupName=\\\"i\\\" style=\\\"margin-top: 10px;\\\">\\n                        <div class=\\\"col-xs-8\\\">\\n                            <input \\n                                type=\\\"text\\\"\\n                                class=\\\"form-control\\\"\\n                                formControlName=\\\"name\\\">\\n                        </div>\\n                        <div class=\\\"col-xs-2\\\">\\n                            <input \\n                                type=\\\"number\\\"\\n                                class=\\\"form-control\\\"\\n                                formControlName=\\\"amount\\\">\\n                        </div>\\n                        <div class=\\\"col-xs-2\\\">\\n                            <button class=\\\"btn btn-danger\\\">X</button>\\n                        </div>\\n                    </div>\\n                    <hr>\\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"col-xs-12\\\">\\n                            <button type=\\\"button\\\" class=\\\"btn btn-success\\\" (click)=\\\"onAddIngredient()\\\">Add Ingredient</button>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n        </form>\\n    </div>\\n</div>\";","import { Injectable } from \"@angular/core\";\r\nimport { Ingredient } from \"../shared/ingredient.model\";\r\nimport { ShoppingListService } from \"../shopping-list/shopping-list.service\";\r\nimport { Recipe } from \"./recipe.model\";\r\n\r\n\r\n@Injectable()\r\nexport class RecipeService {\r\n\r\n    private recipes: Recipe[] = [\r\n        new Recipe('A Test Recipe', \r\n        'This is simply a test', \r\n        'https://upload.wikimedia.org/wikipedia/commons/1/15/Recipe_logo.jpeg', \r\n        [\r\n            new Ingredient('Meat', 1),\r\n            new Ingredient('French Fries', 20)\r\n        ]),\r\n        new Recipe('A Test Recipe', \r\n        'This is simply a test', \r\n        'https://upload.wikimedia.org/wikipedia/commons/1/15/Recipe_logo.jpeg', \r\n        [\r\n            new Ingredient('Buns', 2),\r\n            new Ingredient('Meat', 1)\r\n        ])\r\n      ];\r\n\r\n\r\n      constructor(private slService: ShoppingListService) {\r\n\r\n      }\r\n\r\n\r\n\r\n      \r\n      getRecipes() {\r\n        return this.recipes.slice();\r\n      }\r\n\r\n      getRecipe(index: number) {\r\n        return this.recipes[index];\r\n      }\r\n\r\n      addIngredientsToShoppingList(ingredients: Ingredient[]) {\r\n        this.slService.addIngredients(ingredients);\r\n      }\r\n}","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJyZWNpcGUtZWRpdC5jb21wb25lbnQuY3NzIn0= */\";","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"crnd\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJyZWNpcGUtc3RhcnQuY29tcG9uZW50LmNzcyJ9 */\";","import { Ingredient } from \"../shared/ingredient.model\";\n\nexport class Recipe {\n  public name: string;\n  public description: string;\n  public imagePath: string;\n  public ingredients: Ingredient[];\n\n  constructor(name: string, desc: string, imagePath: string, ingredients: Ingredient[]) {\n    this.name = name;\n    this.description = desc;\n    this.imagePath = imagePath;\n    this.ingredients = ingredients;\n  }\n}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html'\n})\nexport class HeaderComponent {\n\n\n}\n","export default \"<h2>Please select a recipe</h2>\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJyZWNpcGUtZGV0YWlsLmNvbXBvbmVudC5jc3MifQ== */\";","export default \"<body>\\n    <div class=\\\"logo\\\">\\n    </div>\\n    <div class=\\\"container\\\">\\n        <div class=\\\"connect-your-wallet\\\">Connect your wallet</div>\\n        <div style=\\\"text-align:center;\\\">\\n            <button class=\\\"metamask-button\\\" (click)=\\\"onConnectMetamask()\\\"><img src=\\\"../../assets/img/metamask-logo.svg\\\" /></button>\\n        </div>\\n    </div>\\n</body>\\n\";","import { Component, OnInit } from '@angular/core';\nimport { RecipeService } from './recipe.service';\n\n@Component({\n  selector: 'app-recipes',\n  templateUrl: './recipes.component.html',\n  styleUrls: ['./recipes.component.css'],\n  providers: [RecipeService]\n})\nexport class RecipesComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","export default \"  <nav class=\\\"navbar navbar-default\\\">\\n  <div class=\\\"container-fluid\\\">\\n    <div class=\\\"navbar-header\\\">\\n      <a href=\\\"#\\\" class=\\\"navbar-brand\\\">Life Block</a>\\n    </div>\\n\\n    <div class=\\\"collapse navbar-collapse\\\">\\n      <ul class=\\\"nav navbar-nav\\\">\\n        <!-- <li routerLinkActive=\\\"active\\\"><a routerLink=\\\"/recipes\\\">Recipes</a></li>\\n        <li routerLinkActive=\\\"active\\\"><a routerLink=\\\"/shopping-list\\\">Shopping List</a></li> -->\\n        <li routerLinkActive=\\\"active\\\"><a routerLink=\\\"/insurance\\\">Life Insurance</a></li>\\n        <li routerLinkActive=\\\"active\\\"><a routerLink=\\\"/health-care\\\">Death Certificate</a></li>\\n        <li routerLinkActive=\\\"active\\\"><a routerLink=\\\"/login\\\">Decenterlife</a></li>\\n\\n      </ul>\\n      <!-- <ul class=\\\"nav navbar-nav navbar-right\\\">\\n        <li class=\\\"dropdown\\\" appDropdown>\\n          <a style=\\\"cursor: pointer;\\\" class=\\\"dropdown-toggle\\\" role=\\\"button\\\">Manage <span class=\\\"caret\\\"></span></a>\\n          <ul class=\\\"dropdown-menu\\\">\\n            <li><a style=\\\"cursor: pointer;\\\">Save Data</a></li>\\n            <li><a style=\\\"cursor: pointer;\\\">Fetch Data</a></li>\\n          </ul>\\n        </li>\\n      </ul> -->\\n    </div>\\n  </div>\\n</nav>\\n\";","export default \"<div class=\\\"row\\\">\\n  <div class=\\\"col-xs-12\\\">\\n    <img [src]=\\\"recipe.imagePath\\\" alt=\\\"{{ recipe.name }}\\\" class=\\\"img-responsive\\\" style=\\\"max-height: 300px\\\"> \\n  </div>\\n</div>\\n<div class=\\\"row\\\">\\n  <div class=\\\"col-xs-12\\\">\\n    <h1>{{ recipe.name }}</h1>\\n  </div>\\n</div>\\n<div class=\\\"row\\\">\\n  <div class=\\\"col-xs-12\\\">\\n    <div class=\\\"btn-group\\\" appDropdown>\\n      <button\\n        type=\\\"button\\\"\\n        class=\\\"btn btn-primary dropdown-toggle\\\">\\n        Manage Recipe <span class=\\\"caret\\\"></span>\\n      </button>\\n      <ul class=\\\"dropdown-menu\\\">\\n        <li><a (click)=\\\"onAddToShoppingList()\\\" style=\\\"cursor: pointer;\\\">To Shopping List</a></li>\\n        <li><a style=\\\"cursor: pointer;\\\" (click)=\\\"onEditRecipe()\\\">Edit Recipe</a></li>\\n        <li><a style=\\\"cursor: pointer;\\\">Delete Recipe</a></li>\\n      </ul>\\n    </div>\\n  </div>\\n</div>\\n<div class=\\\"row\\\">\\n  <div class=\\\"col-xs-12\\\">\\n    {{ recipe.description }}\\n  </div>\\n</div>\\n<div class=\\\"row\\\">\\n  <div class=\\\"col-xs-12\\\">\\n    <ul class=\\\"list-group\\\">\\n      <li \\n      class=\\\"list-group-item\\\"\\n      *ngFor=\\\"let ingredient of recipe.ingredients\\\">\\n      {{ ingredient.name }} - {{ ingredient.amount }}\\n      </li>\\n    </ul>\\n  </div>\\n</div>\\n\";","import { Component, OnInit } from '@angular/core';\nimport web3 from '../web3';\nimport report from '../report';\nimport policy from '../policy';\nimport { NgForm } from '@angular/forms';\nimport { BlockchainService } from '../blockchain.service';\n\n\n@Component({\n  selector: 'app-health-care',\n  templateUrl: './health-care.component.html',\n  styleUrls: ['./health-care.component.css'],\n  providers: [BlockchainService]\n})\nexport class HealthCareComponent implements OnInit {\n\n  public manager;\n  public players;\n  public balance;\n  public reports;\n  public reportCount;\n  public reportList;\n  public reportStruct;\n  public medicalCauses = ['Heart Disease', 'Cancer', 'COVID-19', 'Accidents', 'Drowning'];\n  public meansOfDeaths = ['Natural Cause', 'Accident', 'Homicide', 'Suicide', 'Undetermined'];\n  public beneficiaries = [];\n  public isLoading = false;\n  public isSuccess = false;\n  public isError = false;\n\n  \n\n    \n\n\n  constructor(private blockchainService: BlockchainService) { }\n\n  async ngOnInit() {\n\n    console.log('Web3 version = ' + web3.version);\n\n    web3.eth.getAccounts().then(console.log);\n\n    this.balance = await web3.eth.getBalance(policy.options.address);\n    this.balance = web3.utils.fromWei(this.balance, 'ether');\n    console.log('Function getBalance() works, balance = ' + this.balance);\n\n    this.beneficiaries = await policy.methods.getBeneficiaries().call();\n    console.log('Function getBeneficiaries() = ' + this.beneficiaries);\n\n  }\n\n  async ngAfterContentInit() {\n    this.manager = await report.methods.manager().call();\n    console.log('This contract is managed by = ' + this.manager);\n    console.log('This contract is managed by (BlockchainService) = ' + this.blockchainService.manager);\n\n    this.players = await report.methods.getPlayers().call();\n    console.log('Function getPlayers() = ' + this.players)\n\n\n    console.log('Function getReportsCount() to display list array of  Reports = ' + this.reportList);\n\n\n    this.reportCount =  await report.methods.getReportsCount().call();\n    console.log('Function getReportsCount() works, Type reportCount = ' + this.reportCount);\n\n    \n    this.reportStruct = await report.methods.getReports().call();\n    this.blockchainService.nextMessage(this.reportStruct);\n    console.log('Report struct from BlockchainService = ' + this.blockchainService.getReportStruct()); \n    console.log('Report struct = ' + this.reportStruct); \n    console.log('Report struct one whole item = ' + this.reportStruct[0]);\n\n\n    console.log('Function createReport is called and = ' + this.reports);\n\n\n    this.reportCount =  await report.methods.getReportsCount().call();\n    console.log(this.reportCount - 1)\n    console.log('Report struct meansofDeath = ' + this.reportStruct[this.reportCount - 1].meansOfDeath);\n\n    \n    \n  }\n\n\n\n  onSubmit = async (form: NgForm) => { \n    this.isLoading = true\n\n    console.log(\"onSubmit function called\")\n    console.log(form);\n\n\n    // import factory campaign\n\n    const accounts = await web3.eth.getAccounts();\n    console.log(accounts); \n\n\n\n    // await report.methods.createRequest()\n\n    console.log(form.value.name)\n\n\n\n    // return reports \n\n\n    this.reportList =  Promise.all(\n      Array(parseInt(this.reportCount))\n        .fill(0, this.reportCount)\n        .map((element, index) => {\n          return report.methods.requests(index).call();\n        })\n    );\n\n\n\n    for (let i = 0; i < this.reportStruct.length; i++) {\n      console.log('name: ' + this.reportStruct[i].name);\n      console.log('address: ' + this.reportStruct[i].address);\n    }\n\n\n    console.log(this.manager);\n    console.log(form.value.name);\n    console.log(form.value.dateOfDeath);\n    console.log(form.value.timeOfDeath);\n    console.log(form.value.placeOfDeath);\n    console.log(form.value.city);\n    console.log(form.value.postalCode);\n    console.log(form.value.country);\n    console.log(form.value.province);\n    console.log(form.value.medicalCauseOfDeaths);\n    console.log(form.value.meansOfDeaths);\n    \n    await report.methods.createReport(this.manager, form.value.name, form.value.dateOfDeath, form.value.timeOfDeath, form.value.placeOfDeath, form.value.city, form.value.postalCode, form.value.country, form.value.province, form.value.medicalCauseOfDeaths, form.value.meansOfDeaths).send({ from: this.manager });\n\n\n    this.reportCount =  await report.methods.getReportsCount().call();\n    console.log('Report Count = ' + this.reportCount)\n    \n    this.reportStruct = await report.methods.getReports().call();\n    console.log('Function getReportsCount() works, Type reportCount = ' + this.reportCount);\n    console.log('Report struct = ' + this.reportStruct);\n    console.log('Report struct name = ' + this.reportStruct[this.reportCount - 1].meansOfDeath);\n\n    for (let index = 0; index < this.reportStruct.length; index++) {\n      console.log(this.reportStruct[index]);\n    }\n\n\n\n\n    \n    if (this.reportStruct[this.reportCount - 1].meansOfDeath != 'Undetermined') {\n      await policy.methods.payBeneficiaries().send({from : this.manager});\n      console.log('Beneficiaries paid-out');\n      this.balance = await web3.eth.getBalance(policy.options.address);\n      this.balance = web3.utils.fromWei(this.balance, 'ether');\n      console.log('Function getBalance() works, balance = ' + this.balance);\n      \n      this.isSuccess = true\n      setTimeout(() => {\n        this.isSuccess = false\n      }, 10000);\n\n    } else {\n      console.log('Beneficiaries not paid-out')\n      this.balance = await web3.eth.getBalance(policy.options.address);\n      this.balance = web3.utils.fromWei(this.balance, 'ether');\n      console.log('Function getBalance() works, balance = ' + this.balance);\n\n      this.isError = true\n      setTimeout(() => {\n        this.isError = false\n      }, 10000);\n    }\n\n    this.isLoading = false\n\n  }\n\n\n}\n","export default \"body {\\r\\n    background-color: #6667AB !important;\\r\\n\\r\\n}\\r\\n\\r\\n\\r\\n.logo {\\r\\n    display: grid;\\r\\n    height: 50vh;\\r\\n    margin: 0px;\\r\\n    grid-template-rows: auto auto;\\r\\n    background-size: cover;\\r\\n    border-radius: 25px 20px 0px 0px;\\r\\n    background-position: center;\\r\\n\\r\\n    background-image: url('decentrelife-logo.svg');\\r\\n    background-position: center;\\r\\n    background-size: cover;\\r\\n    background-color: #6667AB;\\r\\n\\r\\n}\\r\\n\\r\\n\\r\\n.container {\\r\\n    display: grid;\\r\\n    height: 50vh;\\r\\n    margin: 0px;\\r\\n    background-color: white; \\r\\n    background-size: cover;\\r\\n    border-radius: 25px 25px 0px 0px;\\r\\n}\\r\\n\\r\\n\\r\\n.connect-your-wallet {\\r\\n    vertical-align: top;\\r\\n    font-weight: bold;\\r\\n    color: #6667AB;\\r\\n    font-size: 24px;\\r\\n    text-align: center;\\r\\n    top: -50px;\\r\\n    position: relative;\\r\\n\\r\\n}\\r\\n\\r\\n\\r\\n.metamask-button {\\r\\n    background-color: transparent;\\r\\n    border: none;\\r\\n    top: -80px;\\r\\n    position: relative;\\r\\n}\\r\\n\\r\\n\\r\\n.metamask-button:hover {\\r\\n    background-color: lightgrey;\\r\\n  }\\r\\n\\r\\n\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxvZ2luLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxvQ0FBb0M7O0FBRXhDOzs7QUFHQTtJQUNJLGFBQWE7SUFDYixZQUFZO0lBQ1osV0FBVztJQUNYLDZCQUE2QjtJQUM3QixzQkFBc0I7SUFDdEIsZ0NBQWdDO0lBQ2hDLDJCQUEyQjs7SUFFM0IsOENBQTZEO0lBQzdELDJCQUEyQjtJQUMzQixzQkFBc0I7SUFDdEIseUJBQXlCOztBQUU3Qjs7O0FBRUE7SUFDSSxhQUFhO0lBQ2IsWUFBWTtJQUNaLFdBQVc7SUFDWCx1QkFBdUI7SUFDdkIsc0JBQXNCO0lBQ3RCLGdDQUFnQztBQUNwQzs7O0FBR0E7SUFDSSxtQkFBbUI7SUFDbkIsaUJBQWlCO0lBQ2pCLGNBQWM7SUFDZCxlQUFlO0lBQ2Ysa0JBQWtCO0lBQ2xCLFVBQVU7SUFDVixrQkFBa0I7O0FBRXRCOzs7QUFHQTtJQUNJLDZCQUE2QjtJQUM3QixZQUFZO0lBQ1osVUFBVTtJQUNWLGtCQUFrQjtBQUN0Qjs7O0FBRUE7SUFDSSwyQkFBMkI7RUFDN0IiLCJmaWxlIjoibG9naW4uY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbImJvZHkge1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzY2NjdBQiAhaW1wb3J0YW50O1xyXG5cclxufVxyXG5cclxuXHJcbi5sb2dvIHtcclxuICAgIGRpc3BsYXk6IGdyaWQ7XHJcbiAgICBoZWlnaHQ6IDUwdmg7XHJcbiAgICBtYXJnaW46IDBweDtcclxuICAgIGdyaWQtdGVtcGxhdGUtcm93czogYXV0byBhdXRvO1xyXG4gICAgYmFja2dyb3VuZC1zaXplOiBjb3ZlcjtcclxuICAgIGJvcmRlci1yYWRpdXM6IDI1cHggMjBweCAwcHggMHB4O1xyXG4gICAgYmFja2dyb3VuZC1wb3NpdGlvbjogY2VudGVyO1xyXG5cclxuICAgIGJhY2tncm91bmQtaW1hZ2U6IHVybCguLi8uLi9hc3NldHMvaW1nL2RlY2VudHJlbGlmZS1sb2dvLnN2Zyk7XHJcbiAgICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiBjZW50ZXI7XHJcbiAgICBiYWNrZ3JvdW5kLXNpemU6IGNvdmVyO1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzY2NjdBQjtcclxuXHJcbn1cclxuXHJcbi5jb250YWluZXIge1xyXG4gICAgZGlzcGxheTogZ3JpZDtcclxuICAgIGhlaWdodDogNTB2aDtcclxuICAgIG1hcmdpbjogMHB4O1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogd2hpdGU7IFxyXG4gICAgYmFja2dyb3VuZC1zaXplOiBjb3ZlcjtcclxuICAgIGJvcmRlci1yYWRpdXM6IDI1cHggMjVweCAwcHggMHB4O1xyXG59XHJcblxyXG5cclxuLmNvbm5lY3QteW91ci13YWxsZXQge1xyXG4gICAgdmVydGljYWwtYWxpZ246IHRvcDtcclxuICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xyXG4gICAgY29sb3I6ICM2NjY3QUI7XHJcbiAgICBmb250LXNpemU6IDI0cHg7XHJcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgICB0b3A6IC01MHB4O1xyXG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG5cclxufVxyXG5cclxuXHJcbi5tZXRhbWFzay1idXR0b24ge1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7XHJcbiAgICBib3JkZXI6IG5vbmU7XHJcbiAgICB0b3A6IC04MHB4O1xyXG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG59XHJcblxyXG4ubWV0YW1hc2stYnV0dG9uOmhvdmVyIHtcclxuICAgIGJhY2tncm91bmQtY29sb3I6IGxpZ2h0Z3JleTtcclxuICB9XHJcblxyXG5cclxuIl19 */\";","import { Ingredient } from \"../shared/ingredient.model\";\r\nimport { Subject } from \"rxjs\";\r\n\r\nexport class ShoppingListService {\r\n    ingredientsChanged = new Subject<Ingredient[]>();\r\n    startedEditing = new Subject<number>();\r\n    private ingredients: Ingredient[] = [\r\n        new Ingredient('Apples', 5),\r\n        new Ingredient('Tomatoes', 10),\r\n      ];\r\n\r\n    getIngredients() {\r\n        return this.ingredients.slice();\r\n    };\r\n\r\n    getIngredient(index: number) {\r\n        return this.ingredients[index];\r\n    }\r\n\r\n    addIngredient(ingredient: Ingredient) {\r\n        this.ingredients.push(ingredient);\r\n        this.ingredientsChanged.next(this.ingredients.slice());\r\n    }\r\n\r\n    addIngredients(ingredients: Ingredient[]) {\r\n        this.ingredients.push(...ingredients);\r\n        this.ingredientsChanged.next(this.ingredients.slice())\r\n    }\r\n\r\n    updateIngredient(index: number, newIngredient: Ingredient) {\r\n        this.ingredients[index] = newIngredient;\r\n        this.ingredientsChanged.next(this.ingredients.slice());\r\n    }\r\n\r\n    deleteIngredient(index: number) {\r\n        this.ingredients.splice(index, 1);\r\n        this.ingredientsChanged.next(this.ingredients.slice());\r\n    }\r\n    \r\n\r\n}","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\n\nimport { Recipe } from '../recipe.model';\nimport { RecipeService } from '../recipe.service';\n\n@Component({\n  selector: 'app-recipe-list',\n  templateUrl: './recipe-list.component.html',\n  styleUrls: ['./recipe-list.component.css']\n})\nexport class RecipeListComponent implements OnInit {\n  recipes: Recipe[];\n\n  constructor(private recipeService: RecipeService,\n              private router: Router,\n              private route: ActivatedRoute) { }\n\n  ngOnInit() {\n    this.recipes = this.recipeService.getRecipes();\n  }\n\n  onNewRecipe() {\n    this.router.navigate(['new'], {relativeTo: this.route})\n  }\n\n}\n","export default \"<!-- <h2>Life Insurance Policy Contract</h2>\\n<p>This contract is managed by {{ manager }}. The beneficiaries of this Life Insurance policy are:</p>\\n<li> {{beneficiaries[0]}}</li>\\n<li> {{beneficiaries[1]}}</li>\\n<hr>\\n\\n<div class=\\\"container\\\">\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-xs-12\\\">\\n            <form (ngSubmit)=\\\"onEnter(p)\\\" #p=\\\"ngForm\\\">\\n                <div id=\\\"user-data\\\">\\n                    <div class=\\\"form-group\\\">\\n                        <label for=\\\"amount\\\">Amount = {{balance}} Ether</label>\\n                        <input \\n                        type=\\\"text\\\"\\n                        id=\\\"amount\\\"\\n                        class=\\\"form-control\\\"\\n                        ngModel\\n                        name=\\\"amount\\\">\\n                    </div>\\n                    <button class=\\\"btn btn-primary\\\" type=\\\"submit\\\" style='margin-right:16px'>Enter Amount</button>\\n                    <button class=\\\"btn btn-default\\\" type=\\\"button\\\" style='margin-right:16px' (click)=\\\"payBeneficiaries()\\\">Pay Beneficiaries</button>\\n\\n                </div>\\n            </form>\\n        </div>\\n    </div>\\n</div>\\n\\n<br> <br> <br> -->\\n\\n<h2>Death Certificate Smart Contract</h2>\\n<p>A lump-sum pay-out will be made to the beneficiaries if the \\\"Means of death\\\" is not \\\"Undetermined\\\"</p>\\n\\n<hr>\\n<div class=\\\"container\\\">\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-xs-12\\\">\\n            <form (ngSubmit)=\\\"onSubmit(r)\\\" #r=\\\"ngForm\\\">\\n                <div id=\\\"user-data\\\">\\n                    <div class=\\\"form-group\\\">\\n                        <label for=\\\"name\\\">Name</label>\\n                        <input \\n                        type=\\\"text\\\"\\n                        id=\\\"name\\\"\\n                        class=\\\"form-control\\\"\\n                        ngModel\\n                        name=\\\"name\\\">\\n                    </div>\\n                    <div class=\\\"form-group\\\">\\n                        <label for=\\\"dateOfDeath\\\">Date of death</label>\\n                        <input \\n                        type=\\\"date\\\"\\n                        id=\\\"dateOfDeath\\\"\\n                        class=\\\"form-control\\\"\\n                        ngModel\\n                        name=\\\"dateOfDeath\\\">\\n                    </div>\\n                    <div class=\\\"form-group\\\">\\n                        <label for=\\\"timeOfDeath\\\">Time of death</label>\\n                        <input \\n                        type=\\\"time\\\"\\n                        id=\\\"timeOfDeath\\\"\\n                        class=\\\"form-control\\\"\\n                        ngModel\\n                        name=\\\"timeOfDeath\\\">\\n                    </div>\\n                    <div class=\\\"form-group\\\">\\n                        <label for=\\\"placeOfDeath\\\">Place of death (name of facility or location)</label>\\n                        <input \\n                        type=\\\"text\\\"\\n                        id=\\\"placeOfDeath\\\"\\n                        class=\\\"form-control\\\"\\n                        ngModel\\n                        name=\\\"placeOfDeath\\\">\\n                    </div>\\n                    <div class=\\\"form-group\\\">\\n                        <label for=\\\"city\\\">City</label>\\n                        <input \\n                        type=\\\"text\\\"\\n                        id=\\\"city\\\"\\n                        class=\\\"form-control\\\"\\n                        ngModel\\n                        name=\\\"city\\\">\\n                    </div>\\n                    <div class=\\\"form-group\\\">\\n                        <label for=\\\"postalCode\\\">Postal code</label>\\n                        <input \\n                        type=\\\"text\\\"\\n                        id=\\\"postalCode\\\"\\n                        class=\\\"form-control\\\"\\n                        ngModel\\n                        name=\\\"postalCode\\\">\\n                    </div>\\n                    <div class=\\\"form-group\\\">\\n                        <label for=\\\"country\\\">Country</label>\\n                        <input \\n                        type=\\\"text\\\"\\n                        id=\\\"country\\\"\\n                        class=\\\"form-control\\\"\\n                        ngModel\\n                        name=\\\"country\\\">\\n                    </div>\\n                    <div class=\\\"form-group\\\">\\n                        <label for=\\\"province\\\">Province</label>\\n                        <input \\n                        type=\\\"text\\\"\\n                        id=\\\"province\\\"\\n                        class=\\\"form-control\\\"\\n                        ngModel\\n                        name=\\\"province\\\">\\n                    </div>\\n                    <!-- <div class=\\\"form-group\\\">\\n                        <label for=\\\"medicalCauseOfDeath\\\">Medical cause of death</label><br>\\n                        <div>\\n                            <input type=\\\"radio\\\" id=\\\"heartDisease\\\" value=\\\"heartDisease\\\" name=\\\"medicalCauseOfDeath\\\" ngModel>\\n                            <label for=\\\"heartDisease\\\">Heart Disease</label>\\n                        </div>\\n                        <div>\\n                            <input type=\\\"radio\\\" id=\\\"cancer\\\" value=\\\"cancer\\\" name=\\\"medicalCauseOfDeath\\\" ngModel>\\n                            <label for=\\\"cancer\\\">Cancer</label>\\n                        </div>\\n                        <div>\\n                            <input type=\\\"radio\\\" id=\\\"covid19\\\" value=\\\"covid19\\\" name=\\\"medicalCauseOfDeath\\\" ngModel>\\n                            <label for=\\\"covid19\\\">COVID-19</label>\\n                        </div>\\n                        <div>\\n                            <input type=\\\"radio\\\" id=\\\"accident\\\" value=\\\"accident\\\" name=\\\"medicalCauseOfDeath\\\" ngModel>\\n                            <label for=\\\"accident\\\">Accident</label>\\n                        </div>\\n                        <div>\\n                            <input type=\\\"radio\\\" id=\\\"drowning\\\" value=\\\"drowning\\\" name=\\\"medicalCauseOfDeath\\\" ngModel>\\n                            <label for=\\\"drowning\\\">Drowning</label>\\n                        </div>\\n                    </div> -->\\n                    <div class=\\\"form-group\\\">\\n                        <label for=\\\"medicalCauseOfDeaths\\\">Medical cause of death</label><br>\\n                        <select name=\\\"medicalCauseOfDeaths\\\" id=\\\"medicalCauseOfDeaths\\\" ngModel>\\n                            <option *ngFor=\\\"let medicalCause of medicalCauses\\\" value={{medicalCause}}>{{medicalCause}}</option>\\n                        </select>\\n                    </div>\\n                    <div class=\\\"form-group\\\">\\n                        <label for=\\\"meansOfDeath\\\">Means of death</label><br>\\n                        <select name=\\\"meansOfDeaths\\\" id=\\\"meansOfDeaths\\\" ngModel>\\n                            <option *ngFor=\\\"let meansOfDeath of meansOfDeaths\\\" value={{meansOfDeath}}>{{meansOfDeath}}</option>\\n                        </select>\\n                    </div> <br>\\n                    <!-- <div class=\\\"form-group\\\">\\n                        <label for=\\\"medical-cause-of-death\\\">Medical cause of death</label>\\n                        <input \\n                        type=\\\"text\\\"\\n                        id=\\\"medical-cause-of-death\\\"\\n                        class=\\\"form-control\\\"\\n                        ngModel\\n                        name=\\\"medical-cause-of-death\\\">\\n                    </div>\\n                    <div class=\\\"form-group\\\">\\n                        <label for=\\\"means-of-death\\\">Means of death</label>\\n                        <input \\n                        type=\\\"text\\\"\\n                        id=\\\"means-of-death\\\"\\n                        class=\\\"form-control\\\"\\n                        ngModel\\n                        name=\\\"means-of-death\\\">\\n                    </div> -->\\n                    <button [disabled]=\\\"isLoading\\\" class=\\\"btn btn-primary\\\" type=\\\"submit\\\" style='margin-right:16px'>\\n                        <img *ngIf=\\\"isLoading\\\" width=\\\"20px\\\" src=\\\"../../assets/img/spinner.gif\\\"/> Submit</button>\\n                        <br><div *ngIf=\\\"isSuccess\\\" class=\\\"alert alert-success\\\">\\n                            <strong>Success!</strong> Ethereum has been paid-out to beneficiaries. \\n                          </div>\\n                          <br><div *ngIf=\\\"isError\\\" class=\\\"alert alert-danger\\\">\\n                            <strong>Warning!</strong> Ethereum has not been paid-out to beneficiaries as 'Means of Death' was 'Undetermined'. \\n                          </div>\\n                </div>\\n            </form>\\n        </div>\\n    </div>\\n</div>\\n<br> <br> <br>\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzaG9wcGluZy1saXN0LmNvbXBvbmVudC5jc3MifQ== */\";","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport { Ingredient } from '../shared/ingredient.model';\nimport { ShoppingListService } from './shopping-list.service';\n\n@Component({\n  selector: 'app-shopping-list',\n  templateUrl: './shopping-list.component.html',\n  styleUrls: ['./shopping-list.component.css']\n})\nexport class ShoppingListComponent implements OnInit, OnDestroy {\n  ingredients: Ingredient[];\n  private igChangeSub: Subscription;\n\n  constructor(private slService: ShoppingListService) { }\n\n  ngOnInit() {\n    this.ingredients = this.slService.getIngredients();\n    this.igChangeSub = this.slService.ingredientsChanged\n    .subscribe(\n      (ingredients: Ingredient[]) => {\n        this.ingredients = ingredients;\n      }\n    );\n  }\n\n  onEditItem(index: number) {\n    this.slService.startedEditing.next(index)\n  }\n\n\n\n  ngOnDestroy(): void {\n    this.igChangeSub.unsubscribe();\n  }\n\n\n}\n","import { NgModule } from \"@angular/core\";\r\nimport { RouterModule, Routes } from \"@angular/router\";\r\nimport { HealthCareComponent } from \"./health-care/health-care.component\";\r\nimport { HomeComponent } from \"./home/home.component\";\r\nimport { InsuranceComponent } from \"./insurance/insurance.component\";\r\nimport { LoginComponent } from \"./login/login.component\";\r\nimport { RecipeDetailComponent } from \"./recipes/recipe-detail/recipe-detail.component\";\r\nimport { RecipeEditComponent } from \"./recipes/recipe-edit/recipe-edit.component\";\r\nimport { RecipeStartComponent } from \"./recipes/recipe-start/recipe-start.component\";\r\nimport { RecipesComponent } from \"./recipes/recipes.component\";\r\nimport { ShoppingListComponent } from \"./shopping-list/shopping-list.component\";\r\n\r\nconst appRoutes: Routes = [\r\n    { path: '', redirectTo: '/home', pathMatch: 'full' },\r\n    { path: 'home', component: HomeComponent },\r\n    { path: 'recipes', component: RecipesComponent, children: [\r\n        { path: '', component: RecipeStartComponent },\r\n        { path: 'new', component: RecipeEditComponent },\r\n        { path: ':id', component: RecipeDetailComponent },\r\n        { path: ':id/edit', component: RecipeEditComponent },\r\n    ] },\r\n    { path: 'shopping-list', component: ShoppingListComponent },\r\n    { path: 'insurance', component: InsuranceComponent },\r\n    { path: 'health-care', component: HealthCareComponent },\r\n    { path: 'login', component: LoginComponent },\r\n]\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forRoot(appRoutes)],\r\n    exports: [RouterModule]\r\n})\r\n\r\nexport class AppRoutingModule {\r\n\r\n}","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Params, Router } from '@angular/router';\nimport { Recipe } from '../recipe.model';\nimport { RecipeService } from '../recipe.service';\n\n@Component({\n  selector: 'app-recipe-detail',\n  templateUrl: './recipe-detail.component.html',\n  styleUrls: ['./recipe-detail.component.css']\n})\nexport class RecipeDetailComponent implements OnInit {\n  recipe: Recipe;\n  id: number;\n\n  constructor(private recipeService: RecipeService,\n    private route: ActivatedRoute,\n    private router: Router) { }\n\n  ngOnInit() {\n    this.route.params\n    .subscribe(\n      (params: Params) => {\n        this.id = +params['id'];\n        this.recipe = this.recipeService.getRecipe(this.id);\n      }\n      ); \n    }\n\n  onAddToShoppingList() {\n    this.recipeService.addIngredientsToShoppingList(this.recipe.ingredients)\n  }\n\n  onEditRecipe() {\n    this.router.navigate(['edit'], {relativeTo: this.route})\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport web3 from '../web3';\nimport detectEthereumProvider from '@metamask/detect-provider'\nimport { BlockchainService } from '../blockchain.service';\n\n\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  constructor(private blockchainService: BlockchainService) { }\n\n  ngOnInit(): void {\n  }\n\n  async onConnectMetamask() {\n    console.log('Web3 version = ' + web3.version);\n    web3.eth.getAccounts().then(console.log);\n\n    const provider = await detectEthereumProvider()\n    console.log(\"detectEthereumProvider() is working, and = \" + provider);\n    console.log(window.ethereum)\n\n    await detectEthereumProvider() \n\n\n    // return await ethereum.request({ method: 'eth_requestAccounts' });\n\n\n\n    \n\n\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { FormArray, FormControl, FormGroup } from '@angular/forms';\nimport { ActivatedRoute, Params } from '@angular/router';\nimport { RecipeService } from '../recipe.service';\n\n@Component({\n  selector: 'app-recipe-edit',\n  templateUrl: './recipe-edit.component.html',\n  styleUrls: ['./recipe-edit.component.css']\n})\nexport class RecipeEditComponent implements OnInit {\n  id: number;\n  editMode = false;\n  recipeForm: FormGroup;\n\n  constructor(private route: ActivatedRoute,\n              private recipeService: RecipeService) { }\n\n  ngOnInit(): void {\n    this.route.params.subscribe(\n      (params: Params) => {\n        this.id = +params['id'];\n        this.editMode = params['id'] != null;\n        this.initForm();\n      }\n    )\n  }\n\n  onSubmit() {\n    console.log(this.recipeForm)\n  }\n\n  onAddIngredient() {\n    (<FormArray>this.recipeForm.get('ingredients')).push(\n      new FormGroup({\n        'name': new FormControl(),\n        'amount': new FormControl(),\n      })\n    )\n  }\n\n  private initForm() {\n    let recipeName = '';\n    let recipeImagePath = '';\n    let recipeDesciprtion = '';\n    let recipeIngredients = new FormArray([]);\n\n    if (this.editMode) {\n      const recipe = this.recipeService.getRecipe(this.id);\n      recipeName = recipe.name;\n      recipeImagePath = recipe.imagePath;\n      recipeDesciprtion = recipe.description;\n      if (recipe['ingredients']) {\n        for (let ingredient of recipe.ingredients) {\n          recipeIngredients.push(\n            new FormGroup({\n              'name': new FormControl(ingredient.name),\n              'amount': new FormControl(ingredient.amount)\n            })\n          )\n        }\n      }\n    }\n    this.recipeForm = new FormGroup({\n      'name': new FormControl(recipeName),\n      'imagePath': new FormControl(recipeImagePath),\n      'description': new FormControl(recipeDesciprtion),\n      'ingredients': recipeIngredients\n    });\n  }\n\n}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJyZWNpcGVzLmNvbXBvbmVudC5jc3MifQ== */\";"],"sourceRoot":"webpack:///"}